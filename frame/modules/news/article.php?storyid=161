<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja">
<!-- $Id: theme.html,v 1.1.1.1 2003/04/21 14:30:51 jc Exp $ -->
<head>
<meta http-equiv="content-type" content="text/html; charset=EUC-JP" />
<meta http-equiv="content-language" content="ja" />
<meta name="robots" content="index,follow" />
<meta name="keywords" content="MySQL, User group, MyNA, Nippon, Japan, MySQLユーザ会" />
<meta name="description" content="MySQL is fast, robust, reliable open source database." />
<meta name="rating" content="general" />
<meta name="author" content="MyNA Webmaster" />
<meta name="copyright" content="Copyright ? 2001-2005" />
<meta name="generator" content="XOOPS" />
<title>MyNA Web Site</title>
<link href="../../favicon.ico" rel="SHORTCUT ICON" />
<link rel="stylesheet" type="text/css" media="all" href="../../xoops.css" />
<link rel="stylesheet" type="text/css" media="all" href="../../themes/myna/styleNN.css" />
<!-- RMV: added module header -->

<script type="text/javascript">
<!--
//--></script><script type="text/javascript" src="../../include/xoops.js"></script><script type="text/javascript"><!--
//-->
</script>
</head>
<body>

<!-- Main Table -->

<table id="main" cellspacing="0">
  <tr>
    <!-- Center Column -->
    <!-- Main Contents -->
    <td id="centerColumn">
      <div id="content">
      <div style="text-align: left; margin: 10px;"></div>

<hr width=70%>
<center><script type="text/javascript"><!--
google_ad_client = "pub-6416440120333674";
google_alternate_color = "FFFFFF";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
google_ad_channel ="1464500678";
google_page_url = document.location;
google_color_border = "E8CCCA";
google_color_bg = "F1DFDE";
google_color_link = "0000BB";
google_color_url = "009000";
google_color_text = "111111";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></center>
<hr width=70% size=3>

<center><font size=+1>- News -</font></center>
<div style="padding: 3px; margin-right:3px;">
<div class="item">
  <div class="itemHead"><span class="itemTitle"><a href='index.php?storytopic=11'>MySQL 5.5</a>&nbsp;:&nbsp;MySQL 5.5.0-m2 リリース！</span></div>
  <div class="itemInfo">
    <span class="itemPoster">投稿者： <a href="../../userinfo.php?uid=1">webmaster</a></span> <span class="itemPostDate">投稿日時： 2009-12-16 11:06:39</span> (<span class="itemStats">6410 ヒット</span>)
  </div>
  <div class="itemBody">
    
    <p class="itemText">MySQL 5.5.0-m2 がリリースされました。<br /><br />新しく出てきたバージョン系列　「バージョン 5.5」　の最初のリリースです。<br />今回のリリースでは -m2 という見慣れないサフィックスがありますが、これは今回から導入された　「マイルストンモデル」　による　マイルストンリリースです。（JBoss, OpenSuSE のリリースモデルにインスパイアされたそうです）<br />マイルストンモデルにより、従来の Alpha → Beta → RC モデルでは大きなセットをドカンドカンと進行していく方式だったのに対して、徹底的にテストされた小さな機能セットごとにリリースができるので、より頻繁なリリースができるようになると言われています。<br /><br />MySQL の マイルストンモデルについては、以下のページで詳しく説明されています：<br /><a href="http://forge.mysql.com/wiki/Development_Cycle" target="_blank">http://forge.mysql.com/wiki/Development_Cycle</a><br /><br />今回のリリースは マイルストン２　(m2) という位置づけですが、すでにいくつかのマイナーリリースが繰り返されている MySQL 5.4 が マイルストン１ という位置づけのようです。（MySQL 5.4 ブランチへのコミットも、11月下旬よりほぼストップしており、今後はこの MySQL 5.5 milestone  および MySQL 5.6 に開発リソースを集中していくものと思われます）<br /><br /><br />ダウンロードはこちらから：<br /><a href="http://dev.mysql.com/downloads/mysql/5.5.html" target="_blank">http://dev.mysql.com/downloads/mysql/5.5.html</a><br /><br /><br />--------------------<br />以下チェンジログ：<br /><br /><br />■MySQL 5.5シリーズでの機能の追加と変更：<br /> * Support for an interface for semisynchronous replication:<br />   A commit performed on the master side blocks before returning<br />   to the session that performed the transaction until at least<br />   one slave acknowledges that it has received and logged the events<br />   for the transaction.<br />   Semisynchronous replication is implemented through an optional<br />   plugin component. See Section 16.2.8, "Semisynchronous Replication"<br /><br /> * Support for the SQL standard SIGNAL and RESIGNAL statements.<br />   See Section 12.8.8, "SIGNAL and RESIGNAL".<br /><br /> * Enhancements to XML functionality, including a new LOAD XML<br />   statement.<br /><br /> * Two new types of user-defined partitioning:<br />   RANGE COLUMNS partitioning is an extension to RANGE partitioning;<br />   LIST COLUMNS partitioning is an extension to LIST partitioning.<br />   Each of these extensions provides two enhancements to MySQL<br />   partitioning capabilities:<br /><br />   1. It is possible to define partitioning ranges or lists based on<br />      DATE, DATETIME, or string values (such as CHAR or VARCHAR).<br /><br />      You can also define ranges or lists based on multiple column<br />      values when partitioning tables by RANGE COLUMNS or LIST COLUMNS,<br />      respectively. Such a range or list may refer to up to 16 columns.<br /><br />   2. For tables defined using these partitioning types, partition<br />      pruning can now optimize queries with WHERE conditions that use<br />      multiple comparisons between (different) column values and<br />      constants, such as<br />          a = 10 AND b > 5 or a < "2005-11-25" AND b = 10 AND c = 50.<br /><br />      For more information, see Section 17.2.1, "RANGE Partitioning",<br />      and Section 17.2.2, "LIST Partitioning".<br /><br /> * It is now possible to delete all rows from one or more partitions<br />   of a partitioned table using the ALTER TABLE ... TRUNCATE<br />   PARTITION statement. Executing the statement deletes rows without<br />   affecting the structure of the table. The partitions named in the<br />   TRUNCATE PARTITION clause do not have to be contiguous.<br /><br /> * Key caches are now supported for indexes on partitioned MyISAM<br />   tables, using the CACHE INDEX and LOAD INDEX INTO CACHE statements.<br />   In addition, a key cache can be defined for and loaded with indexes<br />   from an entire partitioned table, or for one or more partitions.<br /><br /> * The TO_SECONDS() function is added. You may use this function in<br />   partitioning expressions, and partition pruning is supported for<br />   table defined using such expressions.<br /><br /><br />The following constructs are deprecated and will be removed in a future<br />MySQL release. Where alternatives are shown, applications should be<br />updated to use them.<br /><br /> * The table_type system variable (use storage_engine).<br /><br />   The TYPE table option to specify the storage engine for<br />   CREATE TABLE or ALTER TABLE (use ENGINE).<br /><br />   The SHOW TABLE TYPES SQL statement (use SHOW ENGINES).<br /><br /> * The log_bin_trust_routine_creators variable<br />   (use log_bin_trust_function_creators).<br /><br /> * TIMESTAMP(N): The ability to specify a display width of N<br />   (use without N).<br /><br /> * The SHOW INNODB STATUS and SHOW MUTEX STATUS SQL statements<br />   (use SHOW ENGINE INNODB STATUS for both of these).<br /><br /> * The LOAD TABLE ... FROM MASTER and LOAD DATA FROM MASTER SQL<br />   statements.<br /><br /> * The SHOW PLUGIN SQL statement (use SHOW PLUGINS).<br /><br /> * The BACKUP TABLE and the RESTORE TABLE SQL statements.<br /><br /> * The --master-xxx server options to set replication parameters<br />   (use the CHANGE MASTER TO statement instead):<br />   --master-host, --master-user, --master-password, --master-port,<br />   --master-connect-retry, --master-ssl, --master-ssl-ca,<br />   --master-ssl-capath, --master-ssl-cert, --master-ssl-cipher,<br />   --master-ssl-key.<br /><br /><br />■InnoDB Plugin:<br />  * The InnoDB Plugin is included in MySQL 5.5 releases as the<br />    built-in version of InnoDB. The version of the InnoDB Plugin<br />    in this release is 1.0.5 and is considered of Release<br />    Candidate (RC) quality.<br />    The InnoDB Plugin offers new features, improved performance<br />    and scalability, enhanced reliability and new capabilities for<br />    flexibility and ease of use. Among the features of the InnoDB<br />    Plugin are "Fast index creation," table and index compression,<br />    file format management, new INFORMATION_SCHEMA tables,<br />    capacity tuning, multiple background I/O threads, and group<br />    commit.<br />    For information about these features, see the InnoDB Plugin<br />    Manual at<br />    <a href="http://www.innodb.com/products/innodb_plugin/plugin-documentation" target="_blank">http://www.innodb.com/products/innodb_plugin/plugin-documentation</a><br />    For general information about using InnoDB in MySQL, see<br />    Section 13.6, "The InnoDB Storage Engine."<br /><br /><br /><br />■機能の追加と変更(5.5.0)：<br />  * Incompatible Change: A change has been made to the way that<br />    the server handles prepared statements. This affects prepared<br />    statements processed at the SQL level (using the PREPARE<br />    statement) and those processed using the binary client-server<br />    protocol (using the mysql_stmt_prepare() C API function).<br />    Previously, changes to metadata of tables or views referred to<br />    in a prepared statement could cause a server crash when the<br />    statement was next executed, or perhaps an error at execute<br />    time with a crash occurring later. For example, this could<br />    happen after dropping a table and recreating it with a<br />    different definition.<br />    Now metadata changes to tables or views referred to by<br />    prepared statements are detected and cause automatic<br />    repreparation of the statement when it is next executed.<br />    Metadata changes occur for DDL statements such as those that<br />    create, drop, alter, rename, or truncate tables, or that<br />    analyze, optimize, or repair tables. Repreparation also occurs<br />    after referenced tables or views are flushed from the table<br />    definition cache, either implicitly to make room for new<br />    entries in the cache, or explicitly due to FLUSH TABLES.<br />    Repreparation is automatic, but to the extent that it occurs,<br />    performance of prepared statements is diminished.<br />    Table content changes (for example, with INSERT or UPDATE) do<br />    not cause repreparation, nor do SELECT statements.<br />    An incompatibility with previous versions of MySQL is that a<br />    prepared statement may now return a different set of columns<br />    or different column types from one execution to the next. For<br />    example, if the prepared statement is SELECT * FROM t1,<br />    altering t1 to contain a different number of columns causes<br />    the next execution to return a number of columns different<br />    from the previous execution.<br />    Older versions of the client library cannot handle this change<br />    in behavior. For applications that use prepared statements<br />    with the new server, an upgrade to the new client library is<br />    strongly recommended.<br />    Along with this change to statement repreparation, the default<br />    value of the table_definition_cache system variable has been<br />    increased from 128 to 256. The purpose of this increase is to<br />    lessen the chance that prepared statements will need<br />    repreparation due to referred-to tables/views having been<br />    flushed from the cache to make room for new entries.<br />    A new status variable, Com_stmt_reprepare, has been introduced<br />    to track the number of repreparations.<br />    (Bug#27420: <a href="http://bugs.mysql.com/bug.php?id=27420" target="_blank">http://bugs.mysql.com/bug.php?id=27420</a>,<br />    Bug#27430: <a href="http://bugs.mysql.com/bug.php?id=27430" target="_blank">http://bugs.mysql.com/bug.php?id=27430</a>,<br />    Bug#27690: <a href="http://bugs.mysql.com/bug.php?id=27690" target="_blank">http://bugs.mysql.com/bug.php?id=27690</a>)<br /><br />  * Incompatible Change: Several changes have been made regarding<br />    the language and character set of error messages:<br /><br />       + The --language option for specifying the directory for<br />         the error message file is now deprecated. The new<br />         --lc-messages-dir and --lc-messages options should be<br />         used instead, and --language is handled as an alias for<br />         --lc-messages-dir.<br /><br />       + The language system variable has been removed and<br />         replaced with the new lc_messages_dir and lc_messages<br />         system variables. lc_messages_dir has only a global value<br />         and is read only. lc_messages has global and session<br />         values and can be modified at runtime, so the error<br />         message language can be changed while the server is<br />         running, and individual clients each can have a different<br />         error message language by changing their session<br />         lc_messages value to a different locale name.<br /><br />       + Error messages previously were constructed in a mix of<br />         character sets. This issue is resolved by constructing<br />         error messages internally within the server using UTF-8<br />         and returning them to the client in the character set<br />         specified by the character_set_results system variable.<br />         The content of error messages therefore may in some cases<br />         differ from the messages returned previously.<br /><br />    For more information, see Section 9.3, "Setting the Error<br />    Message Language," and Section 9.1.6, "Character Set for Error<br />    Messages."<br />    See also Bug#46218: <a href="http://bugs.mysql.com/bug.php?id=46218" target="_blank">http://bugs.mysql.com/bug.php?id=46218</a>,<br />    Bug#46236: <a href="http://bugs.mysql.com/bug.php?id=46236." target="_blank">http://bugs.mysql.com/bug.php?id=46236.</a><br /><br />  * Partitioning: New PARTITION BY RANGE COLUMNS(column_list) and<br />    PARTITION BY LIST COLUMNS(column_list) options are added for<br />    the CREATE TABLE and ALTER TABLE statements.<br />    A major benefit of RANGE COLUMNS and LIST COLUMNS partitioning<br />    is that they make it possible to define ranges or lists based<br />    on column values that use string, date, or datetime values.<br />    These new extensions also broaden the scope of partition<br />    pruning to provide better coverage for queries using<br />    comparisons on multiple columns in the WHERE clause, some<br />    examples being WHERE a = 1 AND b < 10 and WHERE a = 1 AND b =<br />    10 AND c < 10.<br />    For more information, see Section 17.2.1, "RANGE<br />    Partitioning," Section 17.2.2, "LIST Partitioning," and<br />    Section 17.4, "Partition Pruning."<br /><br />  * Partitioning: A new ALTER TABLE option, TRUNCATE PARTITION,<br />    makes it possible to delete rows from one or more selected<br />    partitions only. Unlike the case with ALTER TABLE ... DROP<br />    PARTITION, ALTER TABLE ... TRUNCATE PARTITION merely deletes<br />    all rows from the specified partition or partitions, and does<br />    not change the definition of the table.<br /><br />  * Partitioning: It is now possible to assign indexes on<br />    partitioned MyISAM tables to key caches using the CACHE INDEX<br />    and to preload such indexes into the cache using LOAD INDEX<br />    INTO CACHE statements. Cache assignment and preloading of<br />    indexes for such tables can be performed for one, several, or<br />    all partitions of the table.<br />    This functionality is supported for only those partitioned<br />    tables that employ the MyISAM storage engine.<br /><br />  * Cluster Replication: Replication: A replication heartbeat<br />    mechanism has been added to facilitate monitoring. This<br />    provides an alternative to checking log files, making it<br />    possible to detect in real time when a slave has failed.<br />    Configuration of heartbeats is done via a new<br />    MASTER_HEARTBEAT_PERIOD = interval clause for the CHANGE<br />    MASTER TO statement (see Section 12.6.2.1, "CHANGE MASTER TO<br />    Syntax"); monitoring can be done by checking the values of the<br />    status variables Slave_heartbeat_period and<br />    Slave_received_heartbeats (see Section 5.1.7, "Server Status<br />    Variables").<br />    The addition of replication heartbeats addresses a number of<br />    issues:<br /><br />       + Relay logs were rotated every slave_net_timeout seconds<br />         even if no statements were being replicated.<br /><br />       + SHOW SLAVE STATUS displayed an incorrect value for<br />         Seconds_Behind_Master following a FLUSH LOGS statement.<br /><br />       + Replication master-slave connections used<br />         slave_net_timeout for connection timeouts.<br /><br />    (Bug#20435: <a href="http://bugs.mysql.com/bug.php?id=20435" target="_blank">http://bugs.mysql.com/bug.php?id=20435</a>,<br />    Bug#29309: <a href="http://bugs.mysql.com/bug.php?id=29309" target="_blank">http://bugs.mysql.com/bug.php?id=29309</a>,<br />    Bug#30932: <a href="http://bugs.mysql.com/bug.php?id=30932" target="_blank">http://bugs.mysql.com/bug.php?id=30932</a>)<br /><br />  * Replication: The global server variable sync_relay_log is<br />    introduced for use on replication slaves. Setting this<br />    variable to a nonzero integer value N causes the slave to<br />    synchronize the relay log to disk after every N events. Setting<br />    its value to 0 allows the operating system to handle<br />    synchronization of the file. The action of this variable, when<br />    enabled, is analogous to how the sync_binlog variable works<br />    with regard to binary logs on a replication master.<br />    The global server variables sync_master_info and<br />    sync_relay_log_info are introduced for use on replication<br />    slaves to control synchronization of, respectively, the<br />    master.info and relay.info files.<br />    In each case, setting the variable to a nonzero integer value<br />    N causes the slave to synchronize the corresponding file to<br />    disk after every N events. Setting its value to 0 allows the<br />    operating system to handle synchronization of the file instead.<br />    The actions of these variables, when enabled, are analogous to<br />    how the sync_binlog variable works with regard to binary logs<br />    on a replication master.<br />    An additional system variable relay_log_recovery is also now<br />    available. When enabled, this variable causes a replication<br />    slave to discard relay log files obtained from the replication<br />    master following a crash.<br />    These variables can also be set in my.cnf, or by using the<br />    --sync-relay-log, --sync-master-info, --sync-relay-log-info,<br />    and --relay-log-recovery server options.<br />    For more information, see Section 16.1.3.3, "Replication Slave<br />    Options and Variables."<br />    (Bug#31665: <a href="http://bugs.mysql.com/bug.php?id=31665" target="_blank">http://bugs.mysql.com/bug.php?id=31665</a>,<br />    Bug#35542: <a href="http://bugs.mysql.com/bug.php?id=35542" target="_blank">http://bugs.mysql.com/bug.php?id=35542</a>,<br />    Bug#40337: <a href="http://bugs.mysql.com/bug.php?id=40337" target="_blank">http://bugs.mysql.com/bug.php?id=40337</a>)<br /><br />  * Replication: Because SHOW BINLOG EVENTS cannot be used to read<br />    events from relay log files, a new SHOW RELAYLOG EVENTS<br />    statement has been added for this purpose.<br />    (Bug#28777: <a href="http://bugs.mysql.com/bug.php?id=28777" target="_blank">http://bugs.mysql.com/bug.php?id=28777</a>)<br /><br />  * Replication: In circular replication, it was sometimes<br />    possible for an event to propagate such that it would be<br />    reapplied on all servers. This could occur when the<br />    originating server was removed from the replication circle and<br />    so could no longer act as the terminator of its own events, as<br />    normally happens in circular replication.<br />    In order to prevent this from occurring, a new<br />    IGNORE_SERVER_IDS option is introduced for the CHANGE MASTER<br />    TO statement. This option takes a list of replication server<br />    IDs; events having a server ID which appears in this list are<br />    ignored and not applied. For more information, see Section<br />    12.6.2.1, "CHANGE MASTER TO Syntax."<br />    In conjunction with the introduction of IGNORE_SERVER_IDS,<br />    SHOW SLAVE STATUS has a new field Replicate_Ignore_Server_Ids<br />    that displays information about ignored servers.<br />    (Bug#25998: <a href="http://bugs.mysql.com/bug.php?id=25998" target="_blank">http://bugs.mysql.com/bug.php?id=25998</a>)<br />    See also Bug#27808: <a href="http://bugs.mysql.com/bug.php?id=27808." target="_blank">http://bugs.mysql.com/bug.php?id=27808.</a><br /><br />  * With semisynchronous replication, for each transaction, the<br />    master waits until timeout for acknowledgement of receipt from<br />    some semisynchronous slave. If no response occurs during this<br />    period, the master reverts to normal replication. A new system<br />    variable, rpl_semi_sync_master_wait_no_slave, controls whether<br />    the master waits for the timeout to expire before reverting to<br />    normal replication even if the slave count drops to zero<br />    during the timeout period.<br />    If the value is ON (the default), it is allowable for the<br />    slave count to drop to zero during the timeout period (for<br />    example, if slaves disconnect). The master still waits for the<br />    timeout, so as long as some slave reconnects and acknowledges<br />    the transaction within the timeout interval, semisynchronous<br />    replication continues.<br />    If the value is OFF, the master reverts to normal replication<br />    if the slave count drops to zero during the timeout period.<br />    (Bug#47298: <a href="http://bugs.mysql.com/bug.php?id=47298" target="_blank">http://bugs.mysql.com/bug.php?id=47298</a>)<br /><br />  * The InnoDB buffer pool is divided into two sublists: A new<br />    sublist containing blocks that are heavily used by queries,<br />    and an old sublist containing less-used blocks and from which<br />    candidates for eviction are taken. In the default operation of<br />    the buffer pool, a block when read in is loaded at the<br />    midpoint and then moved immediately to the head of the new<br />    sublist as soon as an access occurs. In the case of a table<br />    scan (such as performed for a mysqldump operation), each block<br />    read by the scan ends up moving to the head of the new sublist<br />    because multiple rows are accessed from each block. This<br />    occurs even for a one-time scan, where the blocks are not<br />    otherwise used by other queries. Blocks may also be loaded by<br />    the read-ahead background thread and then moved to the head of<br />    the new sublist by a single access. These effects can be<br />    disadvantageous because they push blocks that are in heavy use<br />    by other queries out of the new sublist to the old sublist<br />    where they become subject to eviction.<br />    InnoDB Plugin now provides two system variables that enable<br />    LRU algorithm tuning:<br /><br />       + innodb_old_blocks_pct<br />         Specifies the approximate percentage of the buffer pool<br />         used for the old block sublist. The range of values is 5<br />         to 95. The default value is 37 (that is, 3/8 of the<br />         pool).<br /><br />       + innodb_old_blocks_time<br />         Specifies how long in milliseconds (ms) a block inserted<br />         into the old sublist must stay there after its first<br />         access before it can be moved to the new sublist. The<br />         default value is 0: A block inserted into the old sublist<br />         moves immediately to the new sublist the first time it is<br />         accessed, no matter how soon after insertion the access<br />         occurs. If the value is greater than 0, blocks remain in<br />         the old sublist until an access occurs at least that many<br />         ms after the first access. For example, a value of 1000<br />         causes blocks to stay in the old sublist for 1 second<br />         after the first access before they become eligible to<br />         move to the new sublist. See Section 7.4.6, "The InnoDB<br />         Buffer Pool"<br /><br />    For additional information, see Section 7.4.6, "The InnoDB<br />    Buffer Pool."<br />    (Bug#45015: <a href="http://bugs.mysql.com/bug.php?id=45015" target="_blank">http://bugs.mysql.com/bug.php?id=45015</a>)<br /><br />  * Two new status variables have been added to SHOW STATUS<br />    output. Innodb_buffer_pool_read_ahead and<br />    Innodb_buffer_pool_read_ahead_evicted indicate the number of<br />    pages read in by the InnoDB read-ahead background thread, and<br />    the number of such pages evicted without ever being accessed,<br />    respectively. Also, the status variables<br />    Innodb_buffer_pool_read_ahead_rnd<br /><br />(<a href="http://dev.mysql.com/doc/refman/5.4/en/server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_rnd" target="_blank">http://dev.mysql.com/doc/refman/5.4/en/server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_rnd</a>)<br />    and Innodb_buffer_pool_read_ahead_seq<br /><br />(<a href="http://dev.mysql.com/doc/refman/5.4/en/server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_seq" target="_blank">http://dev.mysql.com/doc/refman/5.4/en/server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_seq</a>)<br />    have been removed.<br />    (Bug#42885: <a href="http://bugs.mysql.com/bug.php?id=42885" target="_blank">http://bugs.mysql.com/bug.php?id=42885</a>)<br /><br />  * Columns that provide a catalog value in INFORMATION_SCHEMA<br />    tables (for example, TABLES.TABLE_CATALOG) now have a value of<br />    def rather than NULL.<br />    (Bug#35427: <a href="http://bugs.mysql.com/bug.php?id=35427" target="_blank">http://bugs.mysql.com/bug.php?id=35427</a>)<br /><br />  * The deprecated --default-table-type<br />    (<a href="http://dev.mysql.com/doc/refman/5.4/en/server-options.html#op" target="_blank">http://dev.mysql.com/doc/refman/5.4/en/server-options.html#op</a><br />    tion_mysqld_default-table-type) server option has been<br />    removed. (Bug#34818: <a href="http://bugs.mysql.com/bug.php?id=34818" target="_blank">http://bugs.mysql.com/bug.php?id=34818</a>)<br /><br />  * Previously, mysqldump would not dump the INFORMATION_SCHEMA<br />    database and ignored it if it was named on the command line.<br />    Now, mysqldump will dump INFORMATION_SCHEMA if it is named on<br />    the command line. Currently, this requires that the<br />    --skip-lock-tables (or --skip-opt) option be given.<br />    (Bug#33762: <a href="http://bugs.mysql.com/bug.php?id=33762" target="_blank">http://bugs.mysql.com/bug.php?id=33762</a>)<br /><br />  * Several undocumented C API functions were removed:<br />    mysql_manager_close(), mysql_manager_command(),<br />    mysql_manager_connect(), mysql_manager_fetch_line(),<br />    mysql_manager_init(), mysql_disable_reads_from_master(),<br />    mysql_disable_rpl_parse(), mysql_enable_reads_from_master(),<br />    mysql_enable_rpl_parse(), mysql_master_query(),<br />    mysql_master_send_query(), mysql_reads_from_master_enabled(),<br />    mysql_rpl_parse_enabled(), mysql_rpl_probe(),<br />    mysql_rpl_query_type(), mysql_set_master(),<br />    mysql_slave_query(), and mysql_slave_send_query().<br />    (Bug#31952: <a href="http://bugs.mysql.com/bug.php?id=31952" target="_blank">http://bugs.mysql.com/bug.php?id=31952</a>,<br />    Bug#31954: <a href="http://bugs.mysql.com/bug.php?id=31954" target="_blank">http://bugs.mysql.com/bug.php?id=31954</a>)<br /><br />  * Sinhala collations utf8_sinhala_ci and ucs2_sinhala_ci were<br />    added for the utf8 and ucs2 character sets.<br />    (Bug#26474: <a href="http://bugs.mysql.com/bug.php?id=26474" target="_blank">http://bugs.mysql.com/bug.php?id=26474</a>)<br /><br />  * If the value of the --log-warnings option is greater than 1,<br />    the server now writes access-denied errors for new connection<br />    attempts to the error log (for example, if a client user name<br />    or password is incorrect).<br />    (Bug#25822: <a href="http://bugs.mysql.com/bug.php?id=25822" target="_blank">http://bugs.mysql.com/bug.php?id=25822</a>)<br /><br />  * On Windows, use of POSIX I/O interfaces in mysys was replaced<br />    with Win32 API calls (CreateFile(), WriteFile(), and so forth)<br />    and the default maximum number of open files has been<br />    increased to 16384. The maximum can be increased further by<br />    using the --open-files-limit=N option at server startup.<br />    (Bug#24509: <a href="http://bugs.mysql.com/bug.php?id=24509" target="_blank">http://bugs.mysql.com/bug.php?id=24509</a>)<br /><br />  * The TRADITIONAL SQL mode now includes NO_ENGINE_SUBSTITUTION.<br />    (Bug#21099: <a href="http://bugs.mysql.com/bug.php?id=21099" target="_blank">http://bugs.mysql.com/bug.php?id=21099</a>)<br /><br />  * MySQL now implements the SQL standard SIGNAL and RESIGNAL<br />    statements. See Section 12.8.8, "SIGNAL and RESIGNAL."<br />    (Bug#11661: <a href="http://bugs.mysql.com/bug.php?id=11661" target="_blank">http://bugs.mysql.com/bug.php?id=11661</a>)<br /><br />  * The undocumented, deprecated, and not useful SHOW COLUMN TYPES<br />    statement has been removed.<br />    (Bug#5299: <a href="http://bugs.mysql.com/bug.php?id=5299" target="_blank">http://bugs.mysql.com/bug.php?id=5299</a>)<br /><br />  * Dynamic plugins now need to be linked with the<br />    libmysqlservices.a library. For an example showing what<br />    Makefile.am should look like, see Section 21.2.3.3, "Creating<br />    a Plugin Library."<br /><br />  * The FORMAT() function now supports an optional third parameter<br />    that enables a locale to be specified to be used for the<br />    result number's decimal point, thousands separator, and<br />    grouping between separators. Allowable locale values are the<br />    same as the legal values for the lc_time_names system variable<br />    (see Section 9.8, "MySQL Server Locale Support"). For example,<br />    the result from FORMAT(1234567.89,2,'de_DE') is 1.234.567,89.<br />    If no locale is specified, the default is 'en_US'.<br /><br />  * The Greek locale 'el_GR' is now an allowable value for the<br />    lc_time_names system variable.<br /><br />  * Previously, in the absence of other information, the MySQL<br />    client programs mysql, mysqladmin, mysqlcheck, mysqlimport,<br />    and mysqlshow use the compiled-in default character set,<br />    usually latin1.<br />    Now these clients can autodetect which character set to use<br />    based on the operating system setting, such as the value of<br />    the LANG or LC_ALL locale environment language on Unix system<br />    or the code page setting on Windows systems. For systems on<br />    which the locale is available from the OS, the client uses it<br />    to set the default character set rather than using the<br />    compiled-in default. Thus, users can configure the locale in<br />    their environment for use by MySQL clients. For example,<br />    setting LANG to ru_RU.KOI8-R causes the koi8r character set to<br />    be used. The OS character set is mapped to the closest MySQL<br />    character set if there is no exact match. If the client does<br />    not support the matching character set, it uses the<br />    compiled-in default. (For example, ucs2 is not supported as a<br />    connection character set.)<br />    Third-party applications that wish to use character set<br />    autodetection based on the OS setting can use the following<br />    mysql_options() call before connecting to the server:<br />        mysql_options(mysql,<br />            MYSQL_SET_CHARSET_NAME,<br />            MYSQL_AUTODETECT_CHARSET_NAME);<br />    See Section 9.1.4, "Connection Character Sets and Collations."<br /><br />  * mysql_upgrade now has an --upgrade-system-tables option that<br />    causes only the system tables to be upgraded. With this<br />    option, data upgrades are not performed.<br /><br />  * MySQL now supports an interface for semisynchronous<br />    replication: A commit performed on the master side blocks<br />    before returning to the session that performed the transaction<br />    until at least one slave acknowledges that it has received and<br />    logged the events for the transaction. Semisynchronous<br />    replication is implemented through an optional plugin<br />    component. See Section 16.2.8, "Semisynchronous Replication."<br /><br />  * The CREATE TABLESPACE privilege has been introduced. This<br />    privilege exists at the global (superuser) level and enables<br />    you to create, alter, and drop tablespaces and logfile groups.<br /><br />  * The server now supports a Debug Sync facility for thread<br />    synchronization during testing and debugging. To compile in<br />    this facility, configure MySQL with the --enable-debug-sync<br />    option. The debug_sync system variable provides the user<br />    interface Debug Sync. mysqld and mysql-test-run.pl support a<br />    --debug-sync-timeout option to enable the facility and set the<br />    default synchronization point timeout.<br /><br />  * Added the TO_SECONDS() function, which converts a date or<br />    datetime value to a number of seconds since the year 0.<br /><br />  * Parser performance was improved for identifier scanning and<br />    conversion of ASCII string literals.<br /><br />  * The LOAD XML INFILE statement was added. This statement makes<br />    it possible to read data directly from XML files into database<br />    tables. For more information, see Section 12.2.7, "LOAD XML<br />    Syntax."<br /><br /></p>
  </div>
  <div class="itemFoot">
    <span class="itemAdminLink"></span> <span class="itemPermaLink"></span>
  </div>
</div></div>

<div style="text-align: left; margin: 10px;"></div>

<div style="padding: 5px; text-align: right;
margin-right:3px;">
<a href="print.php?storyid=161"><img
src="images/print.gif" border="0"
alt="印刷用ページ" /></a> <a target="_top"
href="mailto:?subject=MyNA Web Siteで見つけた興味深いニュース&amp;body=以下はMyNA Web Siteで見つけた非常に興味深いニュース記事です：:  http://www.mysql.gr.jp/frame/modules/news/article.php?storyid=161"><img src="images/friend.gif"
border="0" alt="このニュースを友達に送る" /></a>
</div>

<!-- -->

<div style="margin:3px; padding: 3px;">
<!-- start comments loop -->
<table class="outer" cellpadding="5" cellspacing="1">
  <tr>
    <th width="20%">投稿者</td>
    <th>スレッド</td>
  </tr>
  </table><!-- end comments loop -->
</div>

      </div>

        <!-- Display center blocks if any -->
        
        <table cellspacing="0" id="centerContent">
          <tr>
            <td id="centerCcolumn" colspan="2">

            <!-- Start center-center blocks loop -->
                          <div style="padding: 5px;">
    <div class="blockContent"><hr width=90%>
<center>[AD]<br><script type="text/javascript"><!--
google_ad_client = "pub-6416440120333674";
google_alternate_color = "FFFFFF";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
google_ad_channel ="1464500678";
google_page_url = document.location;
google_color_border = "E8CCCA";
google_color_bg = "F1DFDE";
google_color_link = "0000BB";
google_color_url = "009000";
google_color_text = "111111";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></center></div>
</div>                        <!-- End center-center blocks loop -->

            </td>
          </tr>
          <tr>
            <td id="centerLcolumn">

            <!-- Start center-left blocks loop -->
                          <!-- End center-left blocks loop -->

            </td>
            <td id="centerRcolumn">

            <!-- Start center-right blocks loop -->
                          <!-- End center-right blocks loop -->

            </td>
          </tr>
        </table>

                <!-- End display center blocks -->

    </td>

  </tr>
</table>

<!-- Footer -->
<p id="copyright">
&lt;<a href="mailto:webmaster@mysql.gr.jp">webmaster@mysql.gr.jp</a>&gt;<br>
Copyright 2000-2005 &copy; <a href="../../../index.html" target="_TOP">MyNA</a>. All Rights Reserved. Feel free to link. 
</body>
</html>