<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja">
<!-- $Id: theme.html,v 1.1.1.1 2003/04/21 14:30:51 jc Exp $ -->
<head>
<meta http-equiv="content-type" content="text/html; charset=EUC-JP" />
<meta http-equiv="content-language" content="ja" />
<meta name="robots" content="index,follow" />
<meta name="keywords" content="MySQL, User group, MyNA, Nippon, Japan, MySQLユーザ会" />
<meta name="description" content="MySQL is fast, robust, reliable open source database." />
<meta name="rating" content="general" />
<meta name="author" content="MyNA Webmaster" />
<meta name="copyright" content="Copyright ? 2001-2005" />
<meta name="generator" content="XOOPS" />
<title>MyNA Web Site</title>
<link href="../../favicon.ico" rel="SHORTCUT ICON" />
<link rel="stylesheet" type="text/css" media="all" href="../../xoops.css" />
<link rel="stylesheet" type="text/css" media="all" href="../../themes/myna/styleNN.css" />
<!-- RMV: added module header -->
 <meta http-equiv="content-style-type" content="text/css" /> <link rel="stylesheet" href="skin/pukiwiki.css.php?charset=EUC-JP" type="text/css" media="screen" charset="EUC-JP" />
 <link rel="stylesheet" href="skin/pukiwiki.css.php?charset=EUC-JP&amp;media=print" type="text/css" media="print" charset="EUC-JP" />
  <link rel="alternate" type="application/rss+xml" title="B-Wiki RSS" href="index.php?cmd=rss" />
<script type="text/javascript">
<!--
//--></script><script type="text/javascript" src="../../include/xoops.js"></script><script type="text/javascript"><!--
//-->
</script>
</head>
<body>

<!-- Main Table -->

<table id="main" cellspacing="0">
  <tr>
    <!-- Center Column -->
    <!-- Main Contents -->
    <td id="centerColumn">
      <div id="content">
      <div id="wiki_header">
<div><a href="index.php?About&#32;MyNA" title="About MyNA (5325d)">Top</a> / FAQ</div>
</div>

<div id="navigator">
 [ <a href="index.php?About&#32;MyNA" >トップ</a> ] &nbsp;

 [
 	<a href="index.php?cmd=edit&amp;page=FAQ" >編集</a> |
			<a href="index.php?cmd=freeze&amp;page=FAQ" >凍結</a> |
	  <a href="index.php?cmd=diff&amp;page=FAQ" >差分</a> 	| <a href="index.php?cmd=backup&amp;page=FAQ" >バックアップ</a>  	| <a href="index.php?plugin=attach&amp;pcmd=upload&amp;page=FAQ" >添付</a>  | <a href="index.php?FAQ" >リロード</a> ] &nbsp;

 [
 	<a href="index.php?plugin=newpage&amp;refer=FAQ" >新規</a> |
    <a href="index.php?cmd=list" >一覧</a>  | <a href="index.php?cmd=search" >単語検索</a> | <a href="index.php?RecentChanges" >最終更新</a> | <a href="http://www.mysql.gr.jp/frame/modules/bwiki/index.php?%A5%D8%A5%EB%A5%D7" >ヘルプ</a> ]

</div>

<hr class="full_hr" />

<div id="body"><ul class="list1" style="padding-left:16px;margin-left:16px"><li><a href="../../index.html" rel="nofollow">Home</a></li>
<li><a href="index.php?About&#32;MyNA" title="About MyNA (5325d)">About MyNA</a></li>
<li><a href="index.php?雑学%252F心得" title="雑学/心得 (5199d)">こころえ</a></li>
<li><a href="http://www.mysql.gr.jp/frame/modules/bwiki/index.php?%BB%A8%B3%D8%2F%CE%F2%BB%CB" title="雑学/歴史 (3950d)">MySQLの歴史</a></li>
<li><a href="index.php?Contrib" title="Contrib (4836d)">Contrib</a></li></ul>
<hr class="full_hr" />
<p>注意: 記述内容の多くは、2004年時点での話です<br />
<br /></p>
<p><span style="font-size:20px;display:inline-block;line-height:130%;text-indent:0px">目次:</span></p>
<div class="contents">
<a id="contents_1"></a>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_0">  全体概要 </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_1">  ライセンスはどうなっていますか？商用利用ではどうすべきですか？ </a></li>
<li><a href="index.php?FAQ#content_1_2">  機能はどういったものがありますか？ </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_3">  MySQLインストール </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_4">  mysqld が最低必要とする物 </a></li>
<li><a href="index.php?FAQ#content_1_5">  バイナリファイル </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_6">  Windows 用のバイナリ mysqld ファイル </a></li>
<li><a href="index.php?FAQ#content_1_7">  Windows サービス </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_8">  ダウンロード </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_9">  MySQL の SQL 文 </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_10">  四捨五入 </a></li>
<li><a href="index.php?FAQ#content_1_11">  SELECT, DELETE, UPDATE と ORDER BY と LIMIT と replication </a></li>
<li><a href="index.php?FAQ#content_1_12">  auto_increment フィールドに 0 か NULL を入れた場合 </a></li>
<li><a href="index.php?FAQ#content_1_13">  ALTER TABLE でテーブルを定義後に変更できますか? </a></li>
<li><a href="index.php?FAQ#content_1_14">  TIMESTAMP フィールド </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_15">  MySQL運用 </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_16">  OS選択 </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_17">  OS による MySQL の違い </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_18">  ストレージエンジン?? </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_19">  標準のストレージエンジン </a></li>
<li><a href="index.php?FAQ#content_1_20">  標準のストレージエンジンの変更 </a></li>
<li><a href="index.php?FAQ#content_1_21">  権限テーブルのテーブルの型 </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_22">  複数のMySQLを同居させるには/MySQLを違うディレクトリで動かすには </a></li>
<li><a href="index.php?FAQ#content_1_23">  I/O分散 </a></li>
<li><a href="index.php?FAQ#content_1_24">  ログとリカバリ </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_25">  mysqlbinlog </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_26">  バックアップ </a></li>
<li><a href="index.php?FAQ#content_1_27">  テーブルの修復、フラグメンテーションの改善 </a></li>
<li><a href="index.php?FAQ#content_1_28">  my.cnf ファイルの読み込み順番 </a></li>
<li><a href="index.php?FAQ#content_1_29">  データベース名、テーブル名、フィールド名 </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_30">  データベース名、テーブル名、フィールド名に日本語は使えますか? </a></li>
<li><a href="index.php?FAQ#content_1_31">  case sensitive? case in-sensitive? </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_32">  init-connect </a></li>
<li><a href="index.php?FAQ#content_1_33">  AUTOCOMMIT モード </a></li>
<li><a href="index.php?FAQ#content_1_34">  大きなフィールドを含む場合 </a></li>
<li><a href="index.php?FAQ#content_1_35">  多くの接続がある場合 </a></li>
<li><a href="index.php?FAQ#content_1_36">  メモリーの使用量 </a></li>
<li><a href="index.php?FAQ#content_1_37">  クエリー、接続の記録 </a></li>
<li><a href="index.php?FAQ#content_1_38">  日本語環境の設定 </a></li>
<li><a href="index.php?FAQ#content_1_39">  MySQL の日本語文字の扱いは OS に依存しないのか? </a></li>
<li><a href="index.php?FAQ#content_1_40">  4.1以上の壁 (日本語の扱いの違い、文字化け等/含む5.0以上) </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_41">  クライアントとサーバーのキャラクターセットの確認 </a></li>
<li><a href="index.php?FAQ#content_1_42">  4.1 では何が変わったの？ </a></li>
<li><a href="index.php?FAQ#content_1_43">  CHAR の定義の違いによる弊害(桁数が変わる) </a></li>
<li><a href="index.php?FAQ#content_1_44">  文字コードの自動変換機能による弊害(文字化け) </a></li>
<li><a href="index.php?FAQ#content_1_45">  mysqldump の仕様変更の弊害(文字化け) </a></li>
<li><a href="index.php?FAQ#content_1_46">  パスワード保存形式の変更(認証エラー、接続失敗) </a></li>
<li><a href="index.php?FAQ#content_1_47">  データベース名、テーブル名、フィールド名は、utf8 コードに直されて保存されるように変わったことの弊害(文字化け、テーブルにアクセスできない) </a></li>
<li><a href="index.php?FAQ#content_1_48">  3.X,4.0 -&gt; 4.1 以上の手順 </a></li>
<li><a href="index.php?FAQ#content_1_49">  4.1サーバーと4.0クライアント </a></li>
<li><a href="index.php?FAQ#content_1_50">  version 4.1 以上の文字コード変換機能とうまくつきあうには?(文字化け) </a></li>
<li><a href="index.php?FAQ#content_1_51">  4.1 にupgradeしたら文字が?になります(文字化け) / 4.1 にしたらクエリの結果がおかしいことがある </a></li>
<li><a href="index.php?FAQ#content_1_52">  mysql コマンドでは大丈夫なのに、PHP,perl,accessなどで文字が ? に化けるのは?(文字化け) </a></li>
<li><a href="index.php?FAQ#content_1_53">  いままでの説明の概念図 </a></li>
<li><a href="index.php?FAQ#content_1_54">  4.1以上の日本語に関する問題点まとめ </a></li>
<li><a href="index.php?FAQ#content_1_55">  結局、どうしろと? </a></li></ul></li></ul></li>
<li><a href="index.php?FAQ#content_1_56">  MySQL連携 </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_57">  エスケープ </a></li>
<li><a href="index.php?FAQ#content_1_58">  C </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_59">  エスケープ </a></li>
<li><a href="index.php?FAQ#content_1_60">  my.cnf を読む </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_61">  PHP </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_62">  エスケープ </a></li>
<li><a href="index.php?FAQ#content_1_63">  my.cnf を読む </a></li>
<li><a href="index.php?FAQ#content_1_64">  NULL の扱い </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_65">  Ruby </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_66">  エスケープ </a></li>
<li><a href="index.php?FAQ#content_1_67">  my.cnf を読む </a></li>
<li><a href="index.php?FAQ#content_1_68">  NULL の扱い </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_69">  Perl </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_70">  エスケープ </a></li>
<li><a href="index.php?FAQ#content_1_71">  my.cnf を読む </a></li></ul></li></ul></li>
<li><a href="index.php?FAQ#content_1_72">  MySQLインターナル </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_73">  SMP, 64bit対応ですか? </a></li>
<li><a href="index.php?FAQ#content_1_74">  追記型ですか？ </a></li>
<li><a href="index.php?FAQ#content_1_75">  vacuumありますか？ </a></li>
<li><a href="index.php?FAQ#content_1_76">  トランザクション分離レベル </a></li>
<li><a href="index.php?FAQ#content_1_77">  ロック </a></li>
<li><a href="index.php?FAQ#content_1_78">  マルチバージョニング </a></li>
<li><a href="index.php?FAQ#content_1_79">  レプリケーション </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_80">  テーブル型(ストレージエンジン) </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_81">  埋込MySQLサーバー </a></li>
<li><a href="index.php?FAQ#content_1_82">  最大のフィールド数、レコード長、等 </a></li>
<li><a href="index.php?FAQ#content_1_83">  SELECT COUNT(*) </a></li>
<li><a href="index.php?FAQ#content_1_84">  InnoDB </a>
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_85">  クラスタードインデックスとレコードについての誤った見解 </a></li>
<li><a href="index.php?FAQ#content_1_86">  auto_increment </a></li>
<li><a href="index.php?FAQ#content_1_87">  途中で障害等でセッションが切れたときは? </a></li>
<li><a href="index.php?FAQ#content_1_88">  誰かがロックを持っていた場合、ほかの人がそのロックを取ろうとしたら? </a></li>
<li><a href="index.php?FAQ#content_1_89">  デッドロックのエラーが発生したとき? </a></li>
<li><a href="index.php?FAQ#content_1_90">  別人が同じ部分のロックを得ようとしたとき、どちらがエラーになる? </a></li>
<li><a href="index.php?FAQ#content_1_91">  REPEATABLE READ, SERIALIZABLE </a></li></ul></li></ul></li>
<li><a href="index.php?FAQ#content_1_92">  MySQL開発 </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_93">  aclocal 手順 </a></li>
<li><a href="index.php?FAQ#content_1_94">  bitkeeper で取る </a></li>
<li><a href="index.php?FAQ#content_1_95">  コンパイラー </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_96">  MySQL ドキュメント </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_97">  種類 </a></li>
<li><a href="index.php?FAQ#content_1_98">  bitkeeper </a></li>
<li><a href="index.php?FAQ#content_1_99">  texi の加工 </a></li></ul></li>
<li><a href="index.php?FAQ#content_1_100">  その他 </a>
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><a href="index.php?FAQ#content_1_101">  バグ報告、質問をする場合 </a></li>
<li><a href="index.php?FAQ#content_1_102">  読み方 </a></li></ul></li></ul>
</div>

<hr class="full_hr" />
<h2 id="content_1_0">全体概要  <a class="anchor_super" id="tbfdba15" href="index.php?FAQ#tbfdba15" title="tbfdba15">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_1">ライセンスはどうなっていますか？商用利用ではどうすべきですか？  <a class="anchor_super" id="g5c074d0" href="index.php?FAQ#g5c074d0" title="g5c074d0">&dagger;</a></h3>
<p>GPL か 有料のライセンスか。<br />
2007年1月1日時点では</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>Community  : GPL</li>
<li>Enterprise : 有料で別のライセンス</li></ul>
<p>GPL については
<a href="http://www.gnu.org/home.ja.html" rel="nofollow">http://www.gnu.org/home.ja.html</a>
をご覧ください。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_2">機能はどういったものがありますか？  <a class="anchor_super" id="va306178" href="index.php?FAQ#va306178" title="va306178">&dagger;</a></h3>
<p><a href="http://www.mysql.gr.jp/frame/modules/bwiki/index.php?%BB%A8%B3%D8%2F%CE%F2%BB%CB" title="雑学/歴史 (3950d)">MySQLの歴史</a> を見て。</p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h2 id="content_1_3">MySQLインストール  <a class="anchor_super" id="wc232f8f" href="index.php?FAQ#wc232f8f" title="wc232f8f">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_4">mysqld が最低必要とする物  <a class="anchor_super" id="z9e6765b" href="index.php?FAQ#z9e6765b" title="z9e6765b">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>basedir/share/ ディレクトリ以下(shareファイル。errmsg.sys や charsets/)</li>
<li>datadir/mysql/ (mysql 権限データベース、テーブル)</li></ul>
<p>権限テーブルや charsets/ がなければ mysqld は起動しない。<br />
errmsg.sys はバージョンによって数が違うので、違うバージョンの errmsg.sys を使用していると mysqld が起動しない。<br />
これらが起きた場合、.err ファイルにエラーが記録されないことが多い。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_5">バイナリファイル  <a class="anchor_super" id="l36e6202" href="index.php?FAQ#l36e6202" title="l36e6202">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>mysql-バージョン-ベンダ-OS-CPUアーキテクチャ.tar.gz<br />
Unix, Unixライク用のバイナリ。<br />
basedir は /usr/local/mysql/ <br />
datadir は /usr/local/mysql/var/ <br />
としてコンパイルされている<br />
展開して、/usr/local/mysql/ にする。<br />
<br /></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>mysql-バージョン-win-noinstall.zip , mysql-noinstall-バージョン-win32.zip<br />
ms-win用。<br />
展開して、C:\mysql\ にする。<br />
NT系列の場合、サービスに登録したければ、mysqld-nt --install を使う。<br />
basedir は c:/mysql/ <br />
datadir は c:/mysql/data/ <br />
MySQL は Windows のレジストリには依存せず、コピーするだけで動く。<br />
<br /></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>mysql-バージョン-win.zip , mysql-バージョン-win32.zip , mysql-essential-バージョン-win32.msi <br />
ms-win用。インストーラー付き。<br />
インストーラーがおかしいことがあるので、こちらはあまり使わない。<br />
mysql-バージョン-win-noinstall.zip (mysql-noinstall-バージョン-win32.zip) の方を使う。</li></ul>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_6">Windows 用のバイナリ mysqld ファイル  <a class="anchor_super" id="m692f97c" href="index.php?FAQ#m692f97c" title="m692f97c">&dagger;</a></h4>
<div class="ie5"><table class="style_table" cellspacing="1" border="0"><tbody><tr><td class="style_td">4.1バイナリ名</td><td class="style_td"></td><td class="style_td">named-pipe</td><td class="style_td">BDB</td></tr><tr><td class="style_td">mysqld.exe</td><td class="style_td">95系用</td><td class="style_td">-</td><td class="style_td">-</td></tr><tr><td class="style_td">mysqld-max.exe</td><td class="style_td">mysqld.exe の、フル機能バージョン</td><td class="style_td">-</td><td class="style_td">O</td></tr><tr><td class="style_td">mysqld-debug.exe</td><td class="style_td">--debug オプションを有効にして作ったバイナリ</td><td class="style_td">O</td><td class="style_td">O</td></tr><tr><td class="style_td">mysqld-nt.exe</td><td class="style_td">NT/XP 系用。named-pipe が使用できる</td><td class="style_td">O</td><td class="style_td">-</td></tr><tr><td class="style_td">mysqld-max-nt.exe</td><td class="style_td">mysqld-nt の、フル機能バージョン</td><td class="style_td">O</td><td class="style_td">O</td></tr></tbody></table></div>
<p>MySQL サーバーの起動には、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>サービスで起動するか</li>
<li>コマンドプロンプトで、直接 mysqld.exe を実行するか</li>
<li>winmysqladmin.exe で起動するか</li></ul>
<p>の方法がある。</p>
<p>起動しない場合は、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>c:\mysql\data\mysqld.err ファイルの中身を確認</li>
<li>c:\mysql\share\ がちゃんとあるのか確認</li>
<li>c:\mysql\data\ がちゃんとあるのか確認</li></ul>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_7">Windows サービス  <a class="anchor_super" id="nb9e9feb" href="index.php?FAQ#nb9e9feb" title="nb9e9feb">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>登録</li></ul>
<pre>c:\mysql\bin\mysqld-max-nt.exe --install サービス名</pre>
<p>mysqld のオプションを指定したい場合は:</p>
<pre>c:\mysql\bin\mysqld-max-nt.exe --install サービス名 --defaults-file=c:/mymy.txt</pre>
<p>のように、指定したいオプションをサービス名の後につける。</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>削除</li></ul>
<pre>c:\mysql\bin\mysqld-max-nt.exe --remove サービス名</pre>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_8">ダウンロード  <a class="anchor_super" id="d6388de3" href="index.php?FAQ#d6388de3" title="d6388de3">&dagger;</a></h3>
<p>ファイル名の規則が分かっている人は、こちらが早い。<br />
<a href="http://ftp.iij.ad.jp/pub/db/mysql/Downloads/" rel="nofollow">http://ftp.iij.ad.jp/pub/db/mysql/Downloads/</a> <br />
<a href="http://ftp.lab.kdd.co.jp/database/MySQL/Downloads/" rel="nofollow">http://ftp.lab.kdd.co.jp/database/MySQL/Downloads/</a> <br />
<a href="ftp://ftp.u-aizu.ac.jp/ftp/pub/dbms/mysql/mysql.com/Downloads/" rel="nofollow">ftp://ftp.u-aizu.ac.jp/ftp/pub/dbms/mysql/mysql.com/Downloads/</a> <br />
いちいち web のリンクをたどってられない人向き。</p>
<p><br />
<br /></p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h2 id="content_1_9">MySQL の SQL 文  <a class="anchor_super" id="z751b199" href="index.php?FAQ#z751b199" title="z751b199">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_10">四捨五入  <a class="anchor_super" id="te2cd28a" href="index.php?FAQ#te2cd28a" title="te2cd28a">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>ROUND() は四捨五入ではない場合がある。OS の C ライブラリに依存する。</li>
<li>確実に四捨五入したければ、FLOOR() か TRUNCATE() を使用する。
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>FLOOR(c+0.5) や TRUNCATE(c+0.05, 2)</li></ul></li></ul>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_11">SELECT, DELETE, UPDATE と ORDER BY と LIMIT と replication  <a class="anchor_super" id="s12ff810" href="index.php?FAQ#s12ff810" title="s12ff810">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>ORDER BY 無しで SELECT したら、どういう順序で返ってくるか分かりません。</li>
<li>DELETE .... LIMIT 10 で 10 レコードだけ DELETE します。<br />
が、SELECT と同じで、ORDER BY が無いと、どこが削除されるか、当たるも八卦、当たらぬも八卦になります。</li>
<li>UPDATE .... LIMIT も同様。</li>
<li>これは replication の時も同様。<br />
master で ORDER BY 無しの LIMIT を実行したとき、master と slave の返すものは、違うものになります。</li></ul>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_12">auto_increment フィールドに 0 か NULL を入れた場合  <a class="anchor_super" id="v4bf0639" href="index.php?FAQ#v4bf0639" title="v4bf0639">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>自動的に採番した値が入ります。</li>
<li>0 から採番できません。auto_increment フィールドの値は 1以上の値になります。</li>
<li>auto_increment は 1 から採番する仕様です。</li></ul>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_13">ALTER TABLE でテーブルを定義後に変更できますか?  <a class="anchor_super" id="q87465d1" href="index.php?FAQ#q87465d1" title="q87465d1">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>そんなもん、最初っから。データあってもOK。</li></ul>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_14">TIMESTAMP フィールド  <a class="anchor_super" id="z63aae1c" href="index.php?FAQ#z63aae1c" title="z63aae1c">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>1つのテーブルに 2つ以上の TIMESTAMP フィールドを作った場合、1つめの TIMESTAMP しか動作しません。</li></ul>
<p><br />
<br /></p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h2 id="content_1_15">MySQL運用  <a class="anchor_super" id="h9ae4375" href="index.php?FAQ#h9ae4375" title="h9ae4375">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_16">OS選択  <a class="anchor_super" id="f8cb3f9a" href="index.php?FAQ#f8cb3f9a" title="f8cb3f9a">&dagger;</a></h3>
<p>2004-12末時点</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>本格運用には、Unix, Unixライク OS を選ぶ。
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>MS-Win は、実験とか開発とかのレベルにおさえておく</li></ul></li>
<li>Linux
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>glibc 2.3 使用。</li>
<li>LinuxThread 使用のこと。新しいスレッドは今は使わないように。</li>
<li>中途半端なバージョンの glibc は使用しない。redhatがよくやるような、バージョン x.y.90 とかは避けよ</li></ul></li>
<li>FreeBSD
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>今のところ FreeBSD 4 では LinuxThread を使うこと。
<ul class="list3" style="padding-left:16px;margin-left:16px"><li>MySQL AB 提供の LinuxThread 使用のバイナリには、NDBクラスターは入っていない。ネイティブスレッドの方には入っている。</li></ul></li>
<li>FreeBSD 5 だと、ネイティブスレッドを使ってもいいかも。</li>
<li>今のところ、うーん、な状態。</li></ul></li></ul>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_17">OS による MySQL の違い  <a class="anchor_super" id="m4025bbd" href="index.php?FAQ#m4025bbd" title="m4025bbd">&dagger;</a></h4>
<p>OS による違いはありません。<br />
どの OS 用の MySQL でも動きや機能は同じです。<br />
MS-Winはシンボリックリンクやソケットの実装がないので、それを MS-Win 用にしているぐらい。それ以外は Unix 用と同じです<br /></p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_18">ストレージエンジン??  <a class="anchor_super" id="za69e7e6" href="index.php?FAQ#za69e7e6" title="za69e7e6">&dagger;</a></h3>
<p>MySQL は、データの保存形式を複数持っています。
その保存形式により、機能や特徴、パフォーマンスが変わります。
これをストレージエンジンと呼んでいます。</p>
<p>このモデルの利点は:</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>用途にあったストレージエンジンを選択することで、特別なチューニングを施すことなく、その目的に合った能力を得ることができる。</li>
<li>古いバージョンのMySQLで作成したファイルは、MySQLをバージョンアップをしてもそのまま使い続けることができる。
MySQL のバージョンアップに際して、データの吸い上げ、入れ直しは発生しない。</li>
<li>新しい手法が登場したとき、簡単にその手法を取り入れ、よりよい環境を提供できる。</li>
<li>あるストレージエンジンは他のストレージエンジンに影響を及ぼさない。
このため、バグの影響が少ない</li></ul>
<p>実際の使い方は</p>
<pre>CREATE TABLE ..... (.....) TYPE=InnoDB;</pre>
<p>のようにするだけ。</p>
<pre>ALTER TABLE .... TYPE=MyISAM;</pre>
<p>のように、テーブルのストレージエンジンを ALTER TABLE 文で変えることも可能。(TYPEのかわりに ENGINE キーワードでも OK)</p>
<p>色々なストレージエンジン:</p>
<div class="ie5"><table class="style_table" cellspacing="1" border="0"><tbody><tr><td class="style_td">MyISAM</td><td class="style_td">検索に強い</td></tr><tr><td class="style_td">InnoDB</td><td class="style_td">トランザクション, foreign key</td></tr><tr><td class="style_td">NDB</td><td class="style_td">クラスター</td></tr><tr><td class="style_td">HEAP(MEMORY)</td><td class="style_td">メモリ内で動作するテーブル</td></tr><tr><td class="style_td">BDB</td><td class="style_td">berkley db</td></tr><tr><td class="style_td">ARCHIVE</td><td class="style_td">INSERT, SELECT のみできる。</td></tr><tr><td class="style_td">CSV</td><td class="style_td">データファイルの中身が CSV 形式という変なエンジン</td></tr><tr><td class="style_td">FEDERATED</td><td class="style_td">リモートの MySQL サーバーにテーブルを集中させることができる。ver.5.0.3から</td></tr><tr><td class="style_td">ISAM</td><td class="style_td">古い。機種依存度が高く、ファイルサイズの制限も低い。ver.5.0から外れそう</td></tr></tbody></table></div>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_19">標準のストレージエンジン  <a class="anchor_super" id="f2c05c80" href="index.php?FAQ#f2c05c80" title="f2c05c80">&dagger;</a></h4>
<p>標準のストレージエンジンは MyISAM。<br />
すなわち、TYPE とか ENGINE を指定しなければ、テーブルの型は  MyISAM になるということ。<br />
<br /></p>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_20">標準のストレージエンジンの変更  <a class="anchor_super" id="k8bc3877" href="index.php?FAQ#k8bc3877" title="k8bc3877">&dagger;</a></h4>
<p>標準のストレージエンジンを InnoDB に変更したい場合は</p>
<pre>mysqld --default-table-type=innodb</pre>
<p>もしくは</p>
<pre>mysqld --default-storage-engine=InnoDB</pre>
<p>もちろん、my.cnf (my.ini) に default-table-type=InnoDB を書いてもよい。<br />
<br />
(4.1.10のms-win用のインストーラー付きバイナリは、インストール時にインストーラーが my.ini ファイルを作るようになっています。<br />
自動で作成された my.ini に default-storage-engine=InnoDB が記述されています)<br /></p>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_21">権限テーブルのテーブルの型  <a class="anchor_super" id="y02aa34d" href="index.php?FAQ#y02aa34d" title="y02aa34d">&dagger;</a></h4>
<p>mysql データベース(権限データベース)のテーブルは、MyISAM , ISAM 以外にしてはいけない。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_22">複数のMySQLを同居させるには/MySQLを違うディレクトリで動かすには  <a class="anchor_super" id="j2f4d89e" href="index.php?FAQ#j2f4d89e" title="j2f4d89e">&dagger;</a></h3>
<pre>mysqld --basedir=/usr/local/mysql-4.0.22 --datadir=/usr/local/mysql-4.0.22/data --socket=/tmp/sock4.0.22 --port=4022 &amp;</pre>
<p>もしくは</p>
<p>/usr/local/mysql-4.0.22/my.cnf
に</p>
<pre>[mysqld]
basedir=/usr/local/mysql-4.0.22
datadir=/usr/local/mysql-4.0.22/data
socket=/tmp/sock4.0.22
port=4022</pre>
<p>と書いて</p>
<pre>mysqld --defaults-file=/usr/local/mysql-4.0.22/my.cnf &amp;</pre>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_23">I/O分散  <a class="anchor_super" id="ma0efab5" href="index.php?FAQ#ma0efab5" title="ma0efab5">&dagger;</a></h3>
<p>MyISAMの場合</p>
<pre>CREATE TABLE .... (...) DATA DIRECTORY = '/path/to/directory/MYD'  INDEX  DIRECTORY = '/path/to/directory/MYI'</pre>
<p>InnoDB の場合1</p>
<pre>[mysqld]
innodb_data_home_dir =
innodb_data_file_path=/path/to/file1:10M;/path/to/file2:50M</pre>
<p>InnoDBの場合2</p>
<pre>[mysqld]
innodb_file_per_table</pre>
<p>OSでの対処の場合</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>データベースは単なるディレクトリなので、違うdiskをそのディレクトリにマウント</li>
<li>データベースのディレクトリをどこかに移動して、シンボリックリンクを張る</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_24">ログとリカバリ  <a class="anchor_super" id="q967d1e7" href="index.php?FAQ#q967d1e7" title="q967d1e7">&dagger;</a></h3>
<p>log-bin (バイナリ更新ログ) が肝です。</p>
<p># 3.22 までは、log-update (更新ログ) を使います。</p>
<p>log-bin 採取開始時のデータに対して、log-bin の内容(テキストのSQL文) を順に全て当てていけば、現在のデータになります。<br />
もちろん、ログの途中まであてれば、その時までの状態になります。<br />
roll forward リカバリですね。</p>
<p>どういう運用ができるかはあなたのアイデア次第。</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>max_binlog_size : 1つのバイナリ更新ログファイルの最大サイズ。これに達すると、自動でローテート</li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>log-bin=名前 : バイナリ更新ログファイルの名前の指定。ディレクトリを含めることが出来る。 log-bin=/disk1/logfile とすると、/disk1/logfile.###### ファイルになる。</li></ul>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_25">mysqlbinlog  <a class="anchor_super" id="sf23477f" href="index.php?FAQ#sf23477f" title="sf23477f">&dagger;</a></h4>
<p>バージョン 4.1 の mysqlbinlog には、バイナリ更新ログの切り出しに便利なオプションがあります。</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>--start-datetime=</li>
<li>--stop-datetime=</li>
<li>--start-position=</li>
<li>--stop-position=</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_26">バックアップ  <a class="anchor_super" id="m60940d3" href="index.php?FAQ#m60940d3" title="m60940d3">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>mysqldump
<pre>mysqldump --single-transaction --master-data --skip-opt --create-options --set-charset  --default-character-set=binary</pre></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>バイナリ更新ログ
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>バイナリ更新ログ(log-bin)ファイルと、log-bin採取開始時のデータベースの状態があればいい</li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>ファイルの直接コピー
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>tar, rsync, cp, cpio など</li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>InnoDB Hot Backup
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>InnoDB のみ。</li>
<li>hot back up ツール</li>
<li>mysqld 実行中のサーバー上で実行する</li></ul></li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_27">テーブルの修復、フラグメンテーションの改善  <a class="anchor_super" id="n8182a74" href="index.php?FAQ#n8182a74" title="n8182a74">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>MyISAM の場合
<pre>REPAIR TABLE
OPTIMIZE TABLE </pre></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>InnoDBの場合
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>通常の(いきなりの電源断)の障害からの復旧は、InnoDB の REDO ログファイルから自動で修復</li>
<li>フラグメンテーションの改善は、ALTER TABLE か テーブルの作り直しか。</li></ul></li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_28">my.cnf ファイルの読み込み順番  <a class="anchor_super" id="c02d799e" href="index.php?FAQ#c02d799e" title="c02d799e">&dagger;</a></h3>
<p>後から読み込まれた設定が、前の設定を上書きします。</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>Unix系列の場合
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>/etc/my.cnf → データディレクトリ/my.cnf → --defaults-extra-file=で指定されたファイル → ~/.my.cnf <br /></li>
<li>「データディレクトリ/my.cnf」 は、コンパイル時に指定されたデータディレクトリ固定です。</li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>MS-Windows 系列の場合
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>%WINDIR%\my.ini → C:\my.cnf → --defaults-extra-file=で指定されたファイル</li>
<li>my.ini , my.cnf が同時に存在する時は、両方読まれる。my.ini が先に読まれる(今は)</li></ul></li></ul>
<p>特別に:</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>全ての OS において
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>--defaults-file= で設定ファイルが指定された場合、指定されたファイル<strong>だけ</strong>が読まれる。</li></ul></li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_29">データベース名、テーブル名、フィールド名  <a class="anchor_super" id="v06fceba" href="index.php?FAQ#v06fceba" title="v06fceba">&dagger;</a></h3>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_30">データベース名、テーブル名、フィールド名に日本語は使えますか?  <a class="anchor_super" id="u07b0640" href="index.php?FAQ#u07b0640" title="u07b0640">&dagger;</a></h4>
<p>使うな。使えるけど。</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_31">case sensitive? case in-sensitive?  <a class="anchor_super" id="r359d37f" href="index.php?FAQ#r359d37f" title="r359d37f">&dagger;</a></h4>
<p>フィールド名は case in-sensitive (大文字小文字を区別しない)。<br />
データベース名、テーブル名は、OS依存。<br />
Winのファイルシステムは case in-sensitive なので、DB名、テーブル名は case in-sensitive。<br />
Win の場合は、mysqld --lower_case_table_names=2 にしておくこと。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_32">init-connect  <a class="anchor_super" id="n46f9fc8" href="index.php?FAQ#n46f9fc8" title="n46f9fc8">&dagger;</a></h3>
<p>クライアントが接続時に、自動的にサーバー内部で実行される SQL 文を指定できる。<br />
ただし、接続ユーザーに SUPER 権限がある場合は、この SQL 文は無視される。<br /></p>
<pre>ex. mysqld --init-connect='SET AUTOCOMMIT=0'</pre>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_33">AUTOCOMMIT モード  <a class="anchor_super" id="x829c7a9" href="index.php?FAQ#x829c7a9" title="x829c7a9">&dagger;</a></h3>
<p>autocommit をはずす。</p>
<pre>SET AUTOCOMMIT=0;</pre>
<p>autocommit mode</p>
<pre>SET AUTOCOMMIT=1;</pre>
<p>標準は、AUTOCOMMIT=1</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_34">大きなフィールドを含む場合  <a class="anchor_super" id="b6f7789c" href="index.php?FAQ#b6f7789c" title="b6f7789c">&dagger;</a></h3>
<pre>mysqld --max_allowed_packet=</pre>
<p>を指定します。<br />
version 4.0 より前は、max_allowed_packetに指定できる値の上限は 16M まででした。<br />
4.0 からは 1G まで指定できます。<br />
これにより、1G弱の大きさの値を LONGBLOB フィールドに入れて扱うことができます。</p>
<p>なお、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>TINYBLOB, TINYTEXT :  255 (2^8-1) バイト</li>
<li>BLOB, TEXT :  65535 (2^16-1) バイト</li>
<li>MEDIUMBLOB,MEDIUMTEXT :  16777215 (2^24-1) バイト</li>
<li>LONGBLOB, LONGTEXT :  4294967295 (2^32-1) バイト</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_35">多くの接続がある場合  <a class="anchor_super" id="z554381b" href="index.php?FAQ#z554381b" title="z554381b">&dagger;</a></h3>
<pre>mysqld --max_connections=500</pre>
<p>これは同時接続数を500まで許すということ。<br />
標準では 100。
<br />
接続数を増やす場合は、メモリーの使用量に注意。<br />
1接続に対して1スレッドが割り当てられます。<br /></p>
<p>また、これだけではなく、さらに以下も考慮します。</p>
<pre>mysqld_safe --open-files-limit=
mysqld --back_log=</pre>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_36">メモリーの使用量  <a class="anchor_super" id="yd5c732e" href="index.php?FAQ#yd5c732e" title="yd5c732e">&dagger;</a></h3>
<p>単純な計算式:</p>
<pre>グローバルでのメモリー割り当て量 + 各スレッドへのメモリー割当量 * 接続数</pre>
<p>注意:</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>ハードウェアやOSによって、1つのプロセスに割り当てられるメモリーの上限値に違いがあることに注意</li>
<li>メモリーが割り当てられなかったとき、子供のスレッドは立ち上がることができない。</li></ul>
<p><br />
変数(全部は書きません。バージョンによって違うし、常に指定される量を最大限に取るとも限らない)</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>グローバルでの割り当て、代表的な変数:
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>bdb_cache_size</li>
<li>bdb_log_buffer_size</li>
<li>innodb_additional_mem_pool_size</li>
<li>innodb_buffer_pool_awe_mem_mb</li>
<li>innodb_buffer_pool_size</li>
<li>innodb_log_buffer_size</li>
<li>key_buffer_size</li>
<li>query_cache_size</li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>各スレッドへの割り当て、代表的な変数:
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>join_buffer_size</li>
<li>read_buffer_size</li>
<li>read_rnd_buffer_size</li>
<li>sort_buffer_size</li></ul></li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_37">クエリー、接続の記録  <a class="anchor_super" id="i01c9d6e" href="index.php?FAQ#i01c9d6e" title="i01c9d6e">&dagger;</a></h3>
<p>全ての接続情報、実行したクエリーを記録するには</p>
<pre>mysqld --log</pre>
<p>を使用します。<br />
いつ、どのユーザーが、どのホストから接続してきて、<br />
いつどういうクエリー(SELECTも全部)を実行したか記録される。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_38">日本語環境の設定  <a class="anchor_super" id="fb74bab6" href="index.php?FAQ#fb74bab6" title="fb74bab6">&dagger;</a></h3>
<p>標準のキャラクターセットが日本語になっていないバイナリを使用するときは、設定をしておきます。</p>
<pre>[mysqld]
default-character-set = ujis


[mysqldump]
default-character-set = ujis

[mysql]
default-character-set = ujis</pre>
<p>なお、language = の指定は、日本語が扱える、扱えないには、全く関係ありません。設定しても無意味。<br />
たんにエラーメッセージが日本語になるだけで、クエリやデータを日本語扱いにするという意味ではありません。<br />
エラーメッセージが日本語になっても邪魔くさい(変な文だし、文字化けするかも)ので、通常は language は指定しません。<br />
<br />
また、全てのアプリが my.cnf を読むわけではありません。勘違いしないように。<br />
my.cnf を読むのは、原則、MySQL 付属のコマンドだけと思ってください。<br />
それ以外は、アプリ側で読むようにコーディングする必要があります。<br />
(この FAQ の「MySQL連携」を参照。)</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_39">MySQL の日本語文字の扱いは OS に依存しないのか?  <a class="anchor_super" id="pea3d6df" href="index.php?FAQ#pea3d6df" title="pea3d6df">&dagger;</a></h3>
<p>MySQL の日本語文字の扱いは OS に依存しません。<br />
独自に実装しているので、OS が何であろうと日本語の扱いは同じ動きになります。</p>
<p><br />
<br /></p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_40">4.1以上の壁 (日本語の扱いの違い、文字化け等/含む5.0以上)  <a class="anchor_super" id="cf382a1b" href="index.php?FAQ#cf382a1b" title="cf382a1b">&dagger;</a></h3>
<p>MySQL 4.0 までは、3.X から 4.0 に upgrade しても、そのまんまなんの影響もなく古いデータを使えました。特にダンプしてリストアしなくても良かったし、ALTER TABLE も必要ありませんでした。</p>
<p>ところが、4.1 以上に upgrade するときは、我々日本語キャラクターセットを使う人間は、注意しなくてはならない点が複数存在します。<br />
4.1 は、5.0pre だと思ってもいいぐらいの開きがあります。(4.0 と 4.1 を同じバージョン 4 だとは思わない方がいいという意味で。)</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_41">クライアントとサーバーのキャラクターセットの確認  <a class="anchor_super" id="f1b67614" href="index.php?FAQ#f1b67614" title="f1b67614">&dagger;</a></h4>
<p>まず、自分の状態を知るための SQL 文</p>
<pre>SHOW VARIABLES LIKE 'char%';</pre>
<p>を覚えてください。</p>
<p><br />
<br />
クライアントのキャラクターセットが binary<br />
サーバーのキャラクターセットが ujis<br />
の場合、以下のように表示される。</p>
<pre>mysql&gt; SHOW VARIABLES LIKE 'char%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | binary                     |
| character_set_connection | binary                     |
| character_set_database   | ujis                       |
| character_set_results    | binary                     |
| character_set_server     | ujis                       |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
7 rows in set (0.00 sec)</pre>
<p><br />
<br />
サーバーとクライアントのキャラクターセットが同じ場合は、<br />
文字の自動変換は起きず、<br />
文字化けは発生しない。</p>
<pre>| character_set_client     | ujis                       |
| character_set_connection | ujis                       |
| character_set_database   | ujis                       |
| character_set_results    | ujis                       |
| character_set_server     | ujis                       |</pre>
<p><br />
<br />
クライアントが binary の場合は、文字の自動変換は起きない。<br />
文字化けは発生しない。<br />
しかし、クライアントの SQL 文のエスケープに注意すること。</p>
<pre>| character_set_client     | binary                     |
| character_set_connection | binary                     |
| character_set_database   | ujis                       |
| character_set_results    | binary                     |
| character_set_server     | ujis                       |</pre>
<p><br />
<br />
クライアントが latin1 で、<br />
サーバーが日本語の場合は、<br />
確実に文字が壊れる。</p>
<pre>| character_set_client     | latin1                     |
| character_set_connection | latin1                     |
| character_set_database   | ujis                       |
| character_set_results    | latin1                     |
| character_set_server     | ujis                       |</pre>
<p><br />
<br />
クライアントとサーバーがマルチバイトキャラクターセットだが、<br />
違うキャラクターセットの場合、<br />
幾つかの文字は破壊されるかもしれない。</p>
<pre>| character_set_client     | utf8                       |
| character_set_connection | utf8                       |
| character_set_database   | ujis                       |
| character_set_results    | utf8                       |
| character_set_server     | ujis                       |</pre>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_42">4.1 では何が変わったの？  <a class="anchor_super" id="u0cc977e" href="index.php?FAQ#u0cc977e" title="u0cc977e">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>CHAR(10) は 10 バイトから 10 文字に変わった。</li>
<li>char() に、全てのバイト列が入らなくなった。例えば、ujis のフィールドには、EUC-JP に定義されるコード空間のバイトしか INSERT できない。全てを入れるパッチは <a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>パスワードの保存形式が変わった。(長くなった)</li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>文字コードの自動変換機能が追加された。</li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>mysqldump の標準キャラクターセットがどうコンパイルしても utf8 になる</li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>データベース、テーブル、フィールド、それぞれ個別にキャラクターセットを指定できるようになった。</li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>データベース名、テーブル名は、OS 上では unicode に直されて保存されるように変わった(ディレクトリ名、ファイル名が、utf8 キャラクターセットで書かれるようになった)。4.0 まではバイナリ列がそのままデータベース名(=ディレクトリ名)、テーブル名(=ファイル名)になっていた。</li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>timestamp 型の表示フォーマットが変わった。4.0 までは 「20050116214504」 であったが、4.1 では 「2005-01-16 21:45:50」。アプリの作り方に注意。</li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>HEAP(MEMORY) テーブルのインデックスに、BTREE が加わった。4.0 までの HEAP テーブルは HASH のみ。(i int, INDEX USING BTREE (i)) TYPE=MEMORY;</li>
<li>sub query の追加</li>
<li>NDB クラスターの追加</li>
<li>GIS追加</li>
<li>utf8 , ucs2 キャラクターセットの追加</li></ul>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_43">CHAR の定義の違いによる弊害(桁数が変わる)  <a class="anchor_super" id="gca2f8ad" href="index.php?FAQ#gca2f8ad" title="gca2f8ad">&dagger;</a></h4>
<p>これは 3.X, 4.0 から 4.1 に upgrade したときに遭遇する問題です。<br />
3.X, 4.0 で char(10) と定義していたフィールドが、
4.1 に uprade した瞬間に、char(3) もしくは char(5) 扱いになってしまいます。<br />
なぜか?</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>ujis は、最大で 3バイトを使用して 1文字を表現する。sjis は最大で 2バイトを使用して sjis 1文字を表現する。</li>
<li>4.0 で CHAR(10) と定義した。これは 10 バイト。</li>
<li>4.1 に upgrade したら、10バイトを、X文字にしなければならない。</li>
<li>そこで、ujis の場合は、10バイト -&gt; 3(ujis)文字となる。</li></ul>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_44">文字コードの自動変換機能による弊害(文字化け)  <a class="anchor_super" id="uc623a3f" href="index.php?FAQ#uc623a3f" title="uc623a3f">&dagger;</a></h4>
<p>4.0 までは、キャラクターセットはサーバーだけが設定するものであり、クライアントがサーバーのキャラクターセットに自動的に合せて動作していました。</p>
<p>ところが</p>
<p>4.1 になってから、サーバー、クライアントがそれぞれのキャラクターセットで動作するようになりました。</p>
<p>例えば、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>クライアントが sjis で動作</li>
<li>サーバーが ujis で動作</li></ul>
<p>している場合、サーバーは、クライアントに対しては常に sjis のデータを送るようになります。</p>
<p>サーバーは ujis のデータを sjis に変換して、クライアントに送るのです。</p>
<p>これは一見便利です。</p>
<p>が、落とし穴があります。</p>
<ol class="list1" style="padding-left:16px;margin-left:16px"><li>変換できないキャラクターセットの組み合わせの場合</li>
<li>変換しきれない文字があった場合</li></ol>
<p>こういう場合は、文字が ? になったり、期待外れの文字になったりします。</p>
<p>例えば、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>クライアントが latin1 で動作</li>
<li>サーバーが sjis で動作</li></ul>
<p>の場合、どうやって sjis を latin1 の文字コードに変換できるというのでしょう？<br />
出来るわけがないので、sjis 文字はあえなく全て ? になってしまいます。<br />
(え、「?」にしなけりゃいいのにって？<br />
私もそう思います。変換できなければ「?」にせず、そのままのバイトのままにしておけば クライアントが latin1 でも問題が少なかったかもしれません。が、仕様が「?」に変換なので、なんとも。)</p>
<p>例えば、</p>
<p>Unicode を使用してアプリを作っている方は経験されているでしょうが、
Unicode の変換マップというのは統一が取れていません。<br />
同じことが MySQL にもおきています。<br />
MySQL が変換するコードと、あなたが使用している環境が考えるコードと文字の形の組み合わせが一致するとは限りません。</p>
<p>では、クライアントが latin1 で、サーバーが ujis,sjis の状況というのは、起きうるものなのでしょうか？</p>
<p>困ったことに、現状では簡単にこの状態が引き起こってしまいます。</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>あなたが使用している PHP は、自分でコンパイルしましたか？</li>
<li>あなたが使用している MySQL は、ご自身の手でコンパイルしましたか?</li></ul>
<p>ほとんどの方が、他の誰かがコンパイルしたものを使用していると思います。<br />
では、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>あなたが使用している PHP, MySQL のライブラリ(libmysql.dll, libmysqlclient)の標準キャラクターセットは何かご存じですか？</li></ul>
<p>そう、ここが問題なのです。<br />
日本人以外のデベロッパーが作ったバイナリは、ujis,sjis を標準のキャラクターセットにしているわけがありません。<br />
事実 MySQL AB 配布のバイナリは、latin1 が標準です。<br />
それらのバイナリを使って PHP の MySQL モジュールを動かせば(作成すれば)、クライアント(PHP)は latin1 で動作し、サーバーは ujis,sjis で動くことになるのです。こうして日本語文字は破壊されます。<br /></p>
<p>これらの問題を避けるには、方法は</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>PHP(Ruby,Perl,C,...)のアプリの変更。キャラクターセットを mysql_options()で指定する or アプリがmy.cnf を読むようにする</li>
<li>PHP(Ruby,Perl,C,...)の MySQL モジュールの標準キャラクターセットを、自分が使うキャラクターセットにする。これはアプリの変更はない。しかし、libmysql.dll, libmysqlclient のコンパイルし直しが発生する。</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_45">mysqldump の仕様変更の弊害(文字化け)  <a class="anchor_super" id="a1cdb128" href="index.php?FAQ#a1cdb128" title="a1cdb128">&dagger;</a></h4>
<p>mysqldump は、3.X, 4.0 までは、コンパイルするときに指定されたキャラクターセットを標準としていました。<br />
4.1 からは、mysqldump はコンパイル時のキャラクターセットを無視して、utf8 を標準とします。(ひどい。普通、mysqldump のキャラクターセットは、mysqlコマンドとかのキャラクターセットと同じだと思って使うよなぁ...)<br /></p>
<p>これは、4.1 の文字コード自動変換機能と組合わさって、最低な状況を起こしてしまいます。</p>
<p>サーバーが ujis, sjis で動いていたとしても、utf8 に変換して dump します。<br />
utf8 はご存じの通り、到底整理されているコードとは言い難く、そのため、dump した内容が壊れる可能性が高いです。<br /></p>
<p>これを避けるためには、mysqldump を実行するとき、必ず default-character-set オプションを指定すべきです。</p>
<p>個人的には以下が好みです。</p>
<pre>[mysqldump]
default-character-set=binary
skip-opt
create-options
set-charset
hex-blob
single-transaction
master-data</pre>
<p>なお、コンパイル時のキャラクターセットを mysqldump が無視しなくなる、
mysqlコマンドと同じキャラクターセットと同じにするパッチは以下にあります。<br />
<a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a></p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_46">パスワード保存形式の変更(認証エラー、接続失敗)  <a class="anchor_super" id="h31d9595" href="index.php?FAQ#h31d9595" title="h31d9595">&dagger;</a></h4>
<p>4.1 からは、パスワードの長さが長くなりました。</p>
<p>しかし、3.X, 4.0 までのパスワードはそのまま使えます。
3.X, 4.0 までの mysql データベースの内容は、そのまま引き続き使用できます。</p>
<p>例</p>
<div class="ie5"><table class="style_table" cellspacing="1" border="0"><tbody><tr><td class="style_td"></td><td class="style_td">Password</td></tr><tr><td class="style_td">4.0まで</td><td class="style_td">12de31820cbc0fce</td></tr><tr><td class="style_td">4.1</td><td class="style_td">*59170D1E4A5E56267B6ED9C51ED62619FB817E6B</td></tr></tbody></table></div>
<p>3.X, 4.0 から 4.1 に upgrade して、mysql_fix_privilege_tables を実行しても、4.0 までの時代に設定した短いパスワードは変更されません。上記例では '12de31820cbc0fce' のままです。<br />
4.1 であたらしくパスワードを設定した場合、'*59170D1E4A5E56267B6ED9C51ED62619FB817E6B' の形式になります。</p>
<p>4.1 のクライアントは、長い方のパスワードでも短い方のパスワードでも認証可能です。</p>
<p>4.0 までのクライアント( libmysqlclient , libmysql.dll ) と 4.1 のサーバーは、長い方のパスワードを使用したら、必ず認証失敗になります。<br />
(「Client does not support authentication protocol requested by server;」)</p>
<p>4.0 までのクライアントと 4.1 のサーバー間の認証が成功する条件は、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>保存されているパスワードが短い方の形式である場合</li>
<li>4.1 サーバーを4.0までのパスワード形式のみで動作させている場合
に限ります。</li></ul>
<p>4.1 サーバーを4.0までのパスワード形式で動作させるには</p>
<pre>[mysqld]
old-passwords</pre>
<p>を指定します。<br />
これは 4.1 サーバーが生成するパスワードの形式を、4.0 までの短い方にするオプションです。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_47">データベース名、テーブル名、フィールド名は、utf8 コードに直されて保存されるように変わったことの弊害(文字化け、テーブルにアクセスできない)  <a class="anchor_super" id="q9ffe1d3" href="index.php?FAQ#q9ffe1d3" title="q9ffe1d3">&dagger;</a></h4>
<p>MySQL は、データベースをディレクトリ、テーブルを(基本的に)ファイルで表現します。フィールド名は .frm ファイルに記録されています。</p>
<p>4.0 まではバイナリ列がそのままデータベース名(=ディレクトリ名)、テーブル名(=ファイル名)、フィールド名になっていました。<br /></p>
<p>ところが 4.1 からは、ディレクトリ名、ファイル名、フィールド名が、utf8のコードで書かれるようになったのです。<br />
このために、4.0 までの MySQL で作成した日本語データベース名、テーブル名、フィールド名は、サーバーを 4.1 に upgrade したとたん、使えなくなります。</p>
<p>4.0 までに使用していた日本語のデータベース名、日本語のテーブル名、日本語のフィールド名を 4.1 に引き継ぐためには、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>4.0 までのデータを一度フルダンプして(ファイルのコピーじゃ駄目)、</li>
<li>4.1 にバージョンアップしたあとに、</li>
<li>フルリストアする必要があります。</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_48">3.X,4.0 -&gt; 4.1 以上の手順  <a class="anchor_super" id="j326bdf6" href="index.php?FAQ#j326bdf6" title="j326bdf6">&dagger;</a></h4>
<ol class="list1" style="padding-left:16px;margin-left:16px"><li>クライアントの upgrade
Ruby, PHP, Perl など、C クライアントを 4.1 (以上)の libmysqlclient にリンクし直してインストール。
<p>なお、文字の自動変換機能による弊害が発生する可能性があるので、他のFAQを参考のこと。
<br /></p></li>
<li>念のため、mysqldump でバックアップ
<br /></li>
<li>upgrade
<pre>[mysqld]
default-character-set = ujis
old-passwords

# 5.0.13-rc 以上
skip-character-set-client-handshake


[mysqldump]
default-character-set = ujis
skip-opt

[mysql]
default-character-set = ujis</pre>
<br />
old-passwords オプションは、4.1以上のサーバーの認証方法を、4.0 までの認証方法のままにするということ。
<p>mysqldump は、標準では全てのデータを utf8 に変換してしまうという極悪な仕様に変わったので、それを避けるために default-character-set を指定。
<br /></p></li>
<li>権限テーブル upgrade
mysql_fix_privilege_tables もしくは
mysql -f -uroot mysql &lt; mysql_fix_privilege_tables.sql
<br /></li>
<li>全ての CHAR(), VARCHAR() を ALTER する。
4.1 以上では CHAR(10) は 10文字を意味するようになったため。
<a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a>
他のFAQも参照</li></ol>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_49">4.1サーバーと4.0クライアント  <a class="anchor_super" id="te7a2889" href="index.php?FAQ#te7a2889" title="te7a2889">&dagger;</a></h4>
<pre>[mysqld-4.1]
old-passwords</pre>
<p>MySQL 4.1 サーバーを 4.0 までの認証で動かす。
こうすれば、3.X, 4.0の libmysqlclient(libmysql.dll) をリンクしているアプリケーションと 4.1 サーバーがきちんと接続できる。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_50">version 4.1 以上の文字コード変換機能とうまくつきあうには?(文字化け)  <a class="anchor_super" id="dbf81e3d" href="index.php?FAQ#dbf81e3d" title="dbf81e3d">&dagger;</a></h4>
<p>MySQL version 4.1 から、utf8 が組み込まれたり、文字コードの自動変換が組み込まれたりと、けっこう文字周りがかわりました。
4.0までの MySQL とは感覚が変わるので、一応、こうした方がトラブルは少ないね、という経験上のものを書いておきます。</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>MySQL 5.0.13-rc 以上の場合、mysqld に skip-character-set-client-handshake オプションを指定する。ただしこのオプションを使う場合は、データの文字コード、テーブル,データベースの文字コード、mysqldの文字コード、クライアントの文字コードの全てが同一である場合に限る。</li>
<li>mysqldump には必ず --default-character-set= を指定すること。</li>
<li>MySQL サーバーとクライアントは、必ず同じキャラクターセットにしておくこと。</li>
<li>4.1以上対応のアプリケーションには、必ず、mysql_options()でキャラクターセットを指定するようなコーディングをするか、my.cnfを読むようなコーディングにする。&quot;SET NAMES&quot; よりはこの対応の方が良い。</li>
<li>データベース名、テーブル名、フィールド名には、マルチバイト文字は使用しないこと。</li>
<li>マルチバイトキャラクターセットと、latin1などのシングルバイトキャラクターセットを混在させないようにすること。</li>
<li>キャラクターセットはデータベース単位、テーブル単位、フィールド単位で指定できるが、フィールド単位でのキャラクターセットの指定はなるべく避けた方がよいだろう</li>
<li>文字の自動変換機能を抑止する、--default-character-set=binary の使用が便利。</li>
<li>既にコンパイル済みのバイナリを使うときは、そのバイナリが作成されたときに埋め込まれている、標準のキャラクターセットを知っておいた方がよい。
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>!!! MySQL AB のバイナリは latin1 が標準 !!!</li></ul></li>
<li>自分でコンパイルする場合は、binary キャラクターセットを標準に指定してコンパイルすれば、アプリの変更や設定の変更無しに、MySQL 4.0,3.23 対象のアプリが動く。</li>
<li>--init-connect='SET NAMES キャラクタセット名' は使わない。これはクライアントコマンドオプション --default-character-set= を無効にしてしまうから。</li>
<li>4.1 の mysqldump には --hex-blob というオプションが追加されている。これは BLOB のバイナリデータを壊さずに mysqldump 可能になる。</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_51">4.1 にupgradeしたら文字が?になります(文字化け) / 4.1 にしたらクエリの結果がおかしいことがある  <a class="anchor_super" id="p5e263ed" href="index.php?FAQ#p5e263ed" title="p5e263ed">&dagger;</a></h4>
<p>4.1 から文字の自動変換機能の追加、char() の仕様変更がありました。<br />
なので、サーバーを 4.1 に upgrade すると、文字が ? になったり、文字が変になったり、クエリーの結果がおかしくなったりすることがあります。<br />
4.1 に upgrade するならば、以下のようにします(アプリの変更をしないための方法)。<br /></p>
<ol class="list1" style="padding-left:16px;margin-left:16px"><li>まず、ソースから MySQL をビルドし直す。charset は binary にして。(後述、備考参照)
<br />
<br /></li>
<li>ビルドしてできた libmysqlclient (windows の場合は libmysql.dll) を使用して、PHP, Perl, Ruby, などの MySQL モジュールをコンパイルし直す。
<br />
<br /></li>
<li>サーバーを 4.1 にする前に、念のためバックアップを取っておく
<br />
<br /></li>
<li>サーバーを 4.1 に upgrade する。<br />
/etc/my.cnf には
<pre>[mysqld-4.1]
old-passwords
 
[mysqld]
default-character-set=使用するキャラクターセット名
 
[mysqldump]
default-character-set=使用するキャラクターセット名
skip-opt

[mysql]
default-character-set=使用するキャラクターセット名 </pre>
<br />
を書いて、4.1 の サーバー起動
<br />
<br /></li>
<li>mysql_fix_privilege_tables を実行して、mysql データベースの権限テーブルを upgrade する。<br />
Windows の場合は、
<pre>mysql -f -uroot mysql &lt; mysql_fix_privilege_tables.sql</pre>
とする
<br />
<br /></li>
<li>すべてのテーブルを ALTER する。<br />
char() の定義がおかしくなっているので、指定し直す。<br />
Unix の場合は、MyNA の <a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a> にあるシェルスクリプトを使ってもよい。
<br />
<br /></li>
<li>また、mysql コマンド、mysqldump コマンド等は、必ず、default-character-set= を指定して使用しましょう。<br />
character-set はサーバーと同じにしましょう。
<br />
<br /></li></ol>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>アプリのソースを変更して対応する方法:<br />
クライアントプログラムのソースに、'SET NAMES ' 文を追加する方法もあります。この場合は、1,2 の手順は必須ではなくなります。<br />
MySQL サーバーに接続した直後に、'SET NAMES クライアントのキャラクターセット名' という SQL 文を実行します。</li></ul>
<p><br />
<br /></p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>5.0.13-rc 以上の場合:<br />
5.0.13-rc 以上の場合、skip-character-set-client-handshake オプションを mysqld に指定したら、4.0 までのように動きます。クライアントはサーバーのキャラクターセットに合せようとします。ただしこのオプションを使う場合は、データの文字コード、テーブル,データベースの文字コード、mysqldの文字コード、クライアントの文字コードの全てが同一である場合に限ります。
<br />
<br /></li>
<li>備考. ソースからのビルド:<br />
Unix なら ./configure --with-charset=binary にする。
Windows なら、<br />
include/my_config.h , include/config-win.h の</li></ul>
<pre>#define MYSQL_DEFAULT_CHARSET_NAME &quot;latin1&quot;</pre>
<p>を</p>
<pre>#define MYSQL_DEFAULT_CHARSET_NAME &quot;binary&quot;</pre>
<p>に。<br />
<br /></p>
<pre>#define MYSQL_DEFAULT_COLLATION_NAME &quot;latin1_swedish_ci&quot;</pre>
<p>を</p>
<pre>#define MYSQL_DEFAULT_COLLATION_NAME &quot;binary&quot;</pre>
<p>に。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_52">mysql コマンドでは大丈夫なのに、PHP,perl,accessなどで文字が ? に化けるのは?(文字化け)  <a class="anchor_super" id="ze1a03e9" href="index.php?FAQ#ze1a03e9" title="ze1a03e9">&dagger;</a></h4>
<p>良くある勘違いは、<br />
「mysqlコマンドが動いているから、自分のアプリも正しくコード変換するだろう」<br />
というものです。<br />
これは間違いです。<br />
<br />
次の節の概念図をじっくり見てください。<br />
<br />
MySQL サーバーとおしゃべりしている libmysqlclient.so (libmysql.dll) に、キャラクターセットが埋め込まれています。<br />
<br />
mysql コマンドには default-character-set のオプションがあり、キャラクターセットの指定ができます。<br />
これは libmysqlclient.so (libmysql.dll) の埋込キャラクターセットを上書きします。<br />
<br />
しかし、MySQL AB が提供しているコマンド(mysqldump, mysql, mysqlimport等)や MyODBC 以外の、<br />
別の誰かが作ったアプリやコマンドは、<br />
my.cnf を読んだり、default-character-set オプションがあったりするわけではありません。<br />
my.cnf を読んだり、default-character-set オプションが使えたり、SET NAMES 文が実行されたりするのは、<br />
あくまでも、アプリ側の責任、作り手の責任なのです。<br />
上の図で言えば、PHPMyAdmin や PHP 自身の部分に、キャラクターセットの指定をする処理や my.cnf を読む処理を、作り手が意図して書かない限り、実現しないのです。<br />
<br />
これは perl だろうが Ruby だろうが、access だろうが、PHP と同じです。<br />
(MyODBC(Connector/ODBC)は設定をすることで、my.cnf の [odbc] グループを読みます。<br />
access で MyODBC を使用しているなら、my.cnf を読むオプションを有効にしておきます。)<br />
<br />
<br />
コードを書くのが嫌なら(変更することが出来ない状況なら)、libmysqlclient (libmysql,dll) の埋込キャラクターセットを変えるのです。<br />
これは libmysqlclient(libmysql.dll)のコンパイルのし直しを意味します。
<br />
なお、5.0.13-rc 以上では、mysqld --skip-character-set-client-handshake とすることで、libmysqlclient はサーバーのキャラクターセットに合せるようになります。<br />
1 つのサーバーで 1 つのキャラクターセットしか使用しない(4.0までのように)のであれば、skip-character-set-client-handshake オプションの指定だけで OK です。<br />
このとき、libmysqlclient の re-compile は不要です。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_53">いままでの説明の概念図  <a class="anchor_super" id="h647531a" href="index.php?FAQ#h647531a" title="h647531a">&dagger;</a></h4>
<p>例えば、PHP のアプリケーションの場合、次のような階層構造になります。<br />
(等幅フォントで見てね)</p>
<pre>
+---- PHPアプリ ---------+
| 例えば PHPMyAdmin など |
|                        |
|       connect()        |
| SET NAMES sjis;        | &lt;- SET NAMES を実行するのはこの層
+------------------------+
   ↓↑
+------- PHP -------------+
| PHP エンジン            |
|  ↓↑                   |
| PHP の MySQL モジュール |
| mysql.so (UNIX)         |
| mysql.dll (Windows)     |
+-------------------------+
   ↓↑
+----------------------------+
| libmysqlclient.so (UNIX)   |      +---- MySQL サーバー ------+
| libmysql.dll (Windows)     |      |                          |
|標準キャラクターセット埋込  |  ←→ [文字コード変換ルーチン]  | &lt;- こいつが曲者
|  例えば latin1 とする      |      |         ↓↑             |
+----------------------------+      | 内部の処理。結果を返す   |
  SET NAMES が実行されない時        |                          |
  埋込の標準charsetが使用される     | サーバー側のcharsetは    |
    これがとても曲者                | 例えば sjis とすると     |
                                    | 「あ」は 0x82A0          |
                                    +--------------------------+

この例では、SET NAMES 文を実行しない場合、latin1 &lt;-&gt; sjis の組み合わせになる。
latin1 には 0x82A0 のコードがないので、「あ」は「?」に変換されてしまう。</pre>
<p><br /></p>
<pre>char(10) が char(3) になるトリック

4.0 まで  : 1 2 3 4 5 6 7 8 9 10
内部バイト: ■■■■■■■■■■
4.1(ujis) : +----+-----+-----+
               1     2     3</pre>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_54">4.1以上の日本語に関する問題点まとめ  <a class="anchor_super" id="ued75648" href="index.php?FAQ#ued75648" title="ued75648">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>配布されているバイナリがlatin1であり、文字破壊が起きてしまうこと。
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>binary でコンパイルされているバイナリなら問題も少なかったんですがねぇ.
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a> に sjis で作成した Win バイナリ置いてます</li></ul></li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>コードのマッピングの問題
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>euc, sjis, ucs2 間の、コードと文字グリフィスのマッピングが食い違うこと。</li>
<li>MS-Winのコードマッピングは 5.0.3 から対応
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a> に4.1用のcp932,eucjpmsのパッチあり</li></ul></li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>euc&lt;-&gt;sjis の変換の時、一度 ucs2 を通ること</li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>自動変換を止めるオプションがないこと
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>自動変換を止めるにはクライアントをbinaryにするか、サーバーと同じcharsetにするしかない。<br />
それだけでは全ての場合に対応できない。<br />
昔のアプリやlatin1のバイナリを使っていても文字破壊や誤変換を防ぐ方法がないと、<br />
導入や移行の障害となる
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a> にとりあえずのパッチあり</li></ul></li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>全てのバイト列がINSERTできない
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>全部のバイト列を通して欲しいが、そうはなっていない
<ul class="list3" style="padding-left:16px;margin-left:16px"><li><a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a> にパッチあり</li></ul></li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>文字破壊の原因解明が大変
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>PHPMyAdmin でたとえるなら、PHPMyAdminの層、PHPの層、MySQLクライアントライブラリの層、MySQLサーバーの層、というように、階層が多すぎて、原因の特定に時間がかかる。</li></ul></li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_55">結局、どうしろと?  <a class="anchor_super" id="ab2a69c7" href="index.php?FAQ#ab2a69c7" title="ab2a69c7">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>MySQL-4.0, 3.X を現在運用しているひとは:<br />
原則、今のままキープですね。<br />
サーバーを 4.1 以上に上げると必ず問題に遭遇します。<br />
充分な検証の結果、解決の目処がたってから、サーバーをバージョンアップしましょう。<br />
<br /></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>これから新しく導入する人は:<br />
はじめから 4.1 以上でも OK。<br />
4.1 で運用しておけば、5.0 へのアップグレードは問題なく楽に出来るでしょう。
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>ただし、4.0までのアプリの資産を流用したい場合は、old-passwords や default-character-set 、SET NAMES 文に注意しましょう。</li>
<li>これから作るアプリは、必ず、 mysql_options() を使用してキャラクターセットを指定するか、my.cnf を読むようにします。</li></ul></li></ul>
<p><br /></p>
<p><br /></p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>4.0以下から4.1以上にバージョンアップするときに
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>アプリの変更をしたくない人は:
<ul class="list3" style="padding-left:16px;margin-left:16px"><li>MySQL サーバー、クライアント、libmysqlclient (libmysql.dll) を使用する全ての  クライアントをコンパイルし直す。</li>
<li>5.0.13-rc 以上であれば、再コンパイルは不要。mysqld --skip-character-set-client-handshake オプションを必ず指定しておく。</li></ul></li></ul></li></ul>
<ul class="list2" style="padding-left:32px;margin-left:32px"><li>アプリの変更をしてもかまわない人は:
<ul class="list3" style="padding-left:16px;margin-left:16px"><li>mysql_options() を使用してキャラクターセットを指定するか、my.cnf を読むようにする。</li></ul></li>
<li>old-passwords を指定しておく</li></ul>
<p><br />
<br /></p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h2 id="content_1_56">MySQL連携  <a class="anchor_super" id="dded299e" href="index.php?FAQ#dded299e" title="dded299e">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_57">エスケープ  <a class="anchor_super" id="dd8167d7" href="index.php?FAQ#dd8167d7" title="dd8167d7">&dagger;</a></h3>
<p>クエリに与える文字列はエスケープしますが、基本的に MySQL 側が用意しているエスケープ関数を使うべきです。<br />
キャラクターセットに従ってエスケープしてくれるからです。<br />
SQLインジェクション対策のためにもエスケープは必要です。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_58">C  <a class="anchor_super" id="vcc2883f" href="index.php?FAQ#vcc2883f" title="vcc2883f">&dagger;</a></h3>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_59">エスケープ  <a class="anchor_super" id="dc993d37" href="index.php?FAQ#dc993d37" title="dc993d37">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>mysql_real_escape_string()</li></ul>
<p>を使う。<br />
mysql_escape_string() は、mysql_real_escape_string() が無いバージョン(3.23.14未満)でのみ使う。
<br />
なぜなら、バージョン 4.1 のソースには以下のように記述されており、mysql_escape_string() はキャラクターセットを考慮しないから。</p>
<pre>ulong STDCALL
mysql_escape_string(char *to,const char *from,ulong length)
{
  return escape_string_for_mysql(default_charset_info, to, from, length);
}
ulong STDCALL
mysql_real_escape_string(MYSQL *mysql, char *to,const char *from, ulong length)
{
  return escape_string_for_mysql(mysql-&gt;charset, to, from, length);
}</pre>
<pre>CHARSET_INFO *default_charset_info = &amp;my_charset_latin1;  //←ええっ！固定なの！？</pre>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_60">my.cnf を読む  <a class="anchor_super" id="o08eb185" href="index.php?FAQ#o08eb185" title="o08eb185">&dagger;</a></h4>
<pre>mysql_options(&amp;mysql, MYSQL_READ_DEFAULT_FILE, &quot;/etc/my.cnf&quot;);
mysql_options(&amp;mysql, MYSQL_READ_DEFAULT_GROUP, &quot;groupname&quot;);</pre>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_61">PHP  <a class="anchor_super" id="xd3019ac" href="index.php?FAQ#xd3019ac" title="xd3019ac">&dagger;</a></h3>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_62">エスケープ  <a class="anchor_super" id="dc993d37" href="index.php?FAQ#dc993d37" title="dc993d37">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>mysql_real_escape_string()</li></ul>
<p>を使う。
<br />
理由は C と同じ。mysql_escape_string() もあるが、こちらは mysql_real_escape_string() をサポートしていない古いバージョンの MySQL (3.23.14未満)を使用して PHP をコンパイルしたときに使用すること。</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_63">my.cnf を読む  <a class="anchor_super" id="oe109b16" href="index.php?FAQ#oe109b16" title="oe109b16">&dagger;</a></h4>
<p>PHP version 4 の場合<br />
読めない。[client] に書いても無駄。<br />
<a href="index.html?Contrib" rel="nofollow">http://www.mysql.gr.jp/frame/modules/bwiki/?Contrib</a>
のパッチを当てる。</p>
<p>PHP version 5の場合<br />
mysqli モジュールに、my.cnf を読む関数が用意されている。</p>
<pre>mysqli_options(connection, MYSQLI_READ_DEFAULT_FILE, &quot;/etc/my.cnf&quot;);
mysqli_options(connection, MYSQLI_READ_DEFAULT_GROUP, &quot;php&quot;);</pre>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_64">NULL の扱い  <a class="anchor_super" id="l0e68b7f" href="index.php?FAQ#l0e68b7f" title="l0e68b7f">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>DBのデータが  NULL の場合、PHP は &quot;&quot; を受け取る。NULL と空文字の区別が出来ない。</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_65">Ruby  <a class="anchor_super" id="p54d4fd7" href="index.php?FAQ#p54d4fd7" title="p54d4fd7">&dagger;</a></h3>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_66">エスケープ  <a class="anchor_super" id="xcd557be" href="index.php?FAQ#xcd557be" title="xcd557be">&dagger;</a></h4>
<p>escape_string() メソッドを使う</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_67">my.cnf を読む  <a class="anchor_super" id="a7be8816" href="index.php?FAQ#a7be8816" title="a7be8816">&dagger;</a></h4>
<pre>my.options(Mysql::READ_DEFAULT_FILE, &quot;/etc/my.cnf&quot;)
my.options(Mysql::READ_DEFAULT_GROUP, &quot;ruby&quot;)</pre>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_68">NULL の扱い  <a class="anchor_super" id="w88c9876" href="index.php?FAQ#w88c9876" title="w88c9876">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>DBのデータが  NULL の場合、Ruby は nil を受け取る。空文字ではない</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_69">Perl  <a class="anchor_super" id="e4c50f0d" href="index.php?FAQ#e4c50f0d" title="e4c50f0d">&dagger;</a></h3>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_70">エスケープ  <a class="anchor_super" id="t9b30518" href="index.php?FAQ#t9b30518" title="t9b30518">&dagger;</a></h4>
<p>DBI の quote() メソッドを使う。</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_71">my.cnf を読む  <a class="anchor_super" id="rc6397c7" href="index.php?FAQ#rc6397c7" title="rc6397c7">&dagger;</a></h4>
<pre>$dsn = &quot;DBI:mysql:test;mysql_read_default_group=perl;mysql_read_default_file=/etc/my.cnf&quot;;</pre>
<p><br />
<br /></p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h2 id="content_1_72">MySQLインターナル  <a class="anchor_super" id="nfbedea6" href="index.php?FAQ#nfbedea6" title="nfbedea6">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_73">SMP, 64bit対応ですか?  <a class="anchor_super" id="nadfb4e6" href="index.php?FAQ#nadfb4e6" title="nadfb4e6">&dagger;</a></h3>
<p>最初っから。<br />
<br />
SMP は CPU を増やすだけで OK。特別な設定や作り直しは不要です。<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_74">追記型ですか？  <a class="anchor_super" id="qd2408d1" href="index.php?FAQ#qd2408d1" title="qd2408d1">&dagger;</a></h3>
<p>いいえ</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_75">vacuumありますか？  <a class="anchor_super" id="v5b1aa58" href="index.php?FAQ#v5b1aa58" title="v5b1aa58">&dagger;</a></h3>
<p>いいえ。</p>
<p>かわりに</p>
<p>MyISAM の場合は、OPTIMIZE TABLE 文か、REPAIR TABLE 文をします。</p>
<p>InnoDB の場合は、ALTER TABLE () TYPE=InnoDB を実行します。</p>
<p>たまにやればいいでしょう</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_76">トランザクション分離レベル  <a class="anchor_super" id="df9399cc" href="index.php?FAQ#df9399cc" title="df9399cc">&dagger;</a></h3>
<div class="ie5"><table class="style_table" cellspacing="1" border="0"><tbody><tr><td class="style_td"></td><td class="style_td">InnoDB</td><td class="style_td">BDB</td><td class="style_td">NDB</td></tr><tr><td class="style_td">READ UNCOMMITTED</td><td class="style_td">○</td><td class="style_td">-</td><td class="style_td">-</td></tr><tr><td class="style_td">READ COMMITTED</td><td class="style_td">○</td><td class="style_td">◎</td><td class="style_td">◎</td></tr><tr><td class="style_td">REPEATABLE READ</td><td class="style_td">◎</td><td class="style_td">-</td><td class="style_td">-</td></tr><tr><td class="style_td">SERIALIZABLE</td><td class="style_td">○</td><td class="style_td">-</td><td class="style_td">-</td></tr></tbody></table></div>
<p>InnoDB の標準は REPEATABLE READ。</p>
<p>InnoDBの REPEATABLE READは、phantom read は起きない実装。</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_77">ロック  <a class="anchor_super" id="da775181" href="index.php?FAQ#da775181" title="da775181">&dagger;</a></h3>
<div class="ie5"><table class="style_table" cellspacing="1" border="0"><tbody><tr><td class="style_td">InnoDB</td><td class="style_td">行レベルロック</td></tr><tr><td class="style_td">NDB</td><td class="style_td">行レベルロック</td></tr><tr><td class="style_td">BDB</td><td class="style_td">ページレベルロック</td></tr><tr><td class="style_td">MyISAM</td><td class="style_td">テーブルレベルのロック</td></tr></tbody></table></div>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>InnoDB、NDB の場合
<ul class="list2" style="padding-left:16px;margin-left:16px"><li><strong>必ず</strong> テーブルに primary key を作ります。</li>
<li>LOCK TABLES は使わないように。</li>
<li>明示的にロックしたい場合は、InnoDB では、SELECT .... FOR UPDATE、 SELECT ..... LOCK IN SHARE MODE を使う。</li>
<li>NDB の SELECT .... LOCK IN SHARE MODE、SELECT .... FOR UPDATE は将来対応予定</li></ul></li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_78">マルチバージョニング  <a class="anchor_super" id="t9218e70" href="index.php?FAQ#t9218e70" title="t9218e70">&dagger;</a></h3>
<p>InnoDB は マルチバージョニング を実装しています</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_79">レプリケーション  <a class="anchor_super" id="z42dc2ec" href="index.php?FAQ#z42dc2ec" title="z42dc2ec">&dagger;</a></h3>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_80">テーブル型(ストレージエンジン)  <a class="anchor_super" id="e5ba598b" href="index.php?FAQ#e5ba598b" title="e5ba598b">&dagger;</a></h4>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>どのストレージエンジンでもレプリケーション可能</li>
<li>master と slave のテーブルの型が違っても動く</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_81">埋込MySQLサーバー  <a class="anchor_super" id="e2e1caab" href="index.php?FAQ#e2e1caab" title="e2e1caab">&dagger;</a></h3>
<p>MySQLサーバーはライブラリ化されています。</p>
<pre>./configure --with-embedded-server</pre>
<p>libmysqld.a (libmysqld.dll) がそれです。<br />
このライブラリに埋め込まれているのは</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>SQL エンジン</li>
<li>各種ストレージエンジン</li></ul>
<p>です。</p>
<p>埋め込まれていないのは</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>認証</li>
<li>ネットワークからの接続管理</li></ul>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_82">最大のフィールド数、レコード長、等  <a class="anchor_super" id="f308b65c" href="index.php?FAQ#f308b65c" title="f308b65c">&dagger;</a></h3>
<div class="ie5"><table class="style_table" cellspacing="1" border="0"><thead><tr><td class="style_td"></td><td class="style_td">MyISAM</td><td class="style_td">InnoDB</td></tr></thead><tbody><tr><td class="style_td" rowspan="2">最大のフィールド数</td><td class="style_td">4096(でも実際は2500から2700前後で頭打ち)</td><td class="style_td">1000</td></tr><tr><td class="style_td" colspan="2">実際はフィールドの長さ制限に左右されて少なくなる</td></tr><tr><td class="style_td" rowspan="2">最大のレコード長</td><td class="style_td">BLOB,TEXTを除いて65535バイト</td><td class="style_td">BLOB,TEXTを除いて8KB。</td></tr><tr><td class="style_td"></td><td class="style_td">BLOB,TEXTを含んだレコードは4GBまで</td></tr><tr><td class="style_td" rowspan="2">最大のキーの長さ</td><td class="style_td">1000バイト</td><td class="style_td">1024バイト</td></tr><tr><td class="style_td">4.1.2より前は500バイト</td><td class="style_td">(InnoDB内部は3500だが、MySQL上位層の制限による)</td></tr></tbody></table></div>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_83">SELECT COUNT(*)  <a class="anchor_super" id="b6492d58" href="index.php?FAQ#b6492d58" title="b6492d58">&dagger;</a></h3>
<p>1テーブルの WHERE 無しの SELECT COUNT(*) は、</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>MyISAM の場合はテーブル情報(レコード数が書かれている)からレコード数を直接読み込みます。</li>
<li>InnoDB の場合はインデックスツリーをその都度調べます。</li></ul>
<p>なので、SELECT COUNT(*) の計測結果を取って両者を比較するというのは、<br />
前提条件の違う物を比較しているので、<br />
その結果からの考察を全くうのみにすることはできません。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_84">InnoDB  <a class="anchor_super" id="wb6368f1" href="index.php?FAQ#wb6368f1" title="wb6368f1">&dagger;</a></h3>
<p>InnoDB テーブルには、primary key を<strong>必ず</strong>作ってください。</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_85">クラスタードインデックスとレコードについての誤った見解  <a class="anchor_super" id="y15ad311" href="index.php?FAQ#y15ad311" title="y15ad311">&dagger;</a></h4>
<p>「新しいレコードをインサートするたびに、全てのレコードをキー順になるように、全てのレコードを並び換えてディスク上に保存している。」<br />
これは誤りです。<br />
キー順にレコードが追えればいいわけで、
それは別に物理的な(ディスク上の)順序がキー順というわけではなく、
レコードを指している物をキー順に追えればいい実装になっています。<br />
レコードへのポインターを操作しているにすぎません。<br />
<br /></p>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_86">auto_increment  <a class="anchor_super" id="x913272a" href="index.php?FAQ#x913272a" title="x913272a">&dagger;</a></h4>
<p>InnoDB の場合、AUTO_INCREMENT の取るべき値は、メモリー上にあります。<br />
mysqld 起動時に、最大の値がチェックされて、メモリーに保存されます。<br />
(MyISAM の場合は、ファイルに書かれています。)</p>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_87">途中で障害等でセッションが切れたときは?  <a class="anchor_super" id="xcadb566" href="index.php?FAQ#xcadb566" title="xcadb566">&dagger;</a></h4>
<p>ROLLBACK</p>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_88">誰かがロックを持っていた場合、ほかの人がそのロックを取ろうとしたら?  <a class="anchor_super" id="p401c59c" href="index.php?FAQ#p401c59c" title="p401c59c">&dagger;</a></h4>
<p>ずーーーとロックが外れるまで待つわけではなく、<br />
待ち時間が 50&quot;(innodb_lock_wait_timeoutの値) に達したら、デッドロックエラーにします。<br />
<br />
Oracle は標準では待つ。<br /></p>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_89">デッドロックのエラーが発生したとき?  <a class="anchor_super" id="cbc4fd26" href="index.php?FAQ#cbc4fd26" title="cbc4fd26">&dagger;</a></h4>
<p>デッドロックエラーが発生したとき、自動で ROLLBACK します。<br />
また、ROLLBACK以外のクエリーも実行できます。<br />
<br />
Oracle は、デッドロックエラーが発生しても、そのまま ROLLBACK も何もせず、そのままトランザクションが続いている。<br />
postgresql は ROLLBACK 文しか受け付けない状態に陥る<br /></p>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_90">別人が同じ部分のロックを得ようとしたとき、どちらがエラーになる?  <a class="anchor_super" id="o8f3d450" href="index.php?FAQ#o8f3d450" title="o8f3d450">&dagger;</a></h4>
<p>コストベースで判断。<br />
後からとか先に実行したとか以外に、どちらが変更が多いかを見ている。</p>
<p><br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h4 id="content_1_91">REPEATABLE READ, SERIALIZABLE  <a class="anchor_super" id="q6dc0af4" href="index.php?FAQ#q6dc0af4" title="q6dc0af4">&dagger;</a></h4>
<p>InnoDB の REPEATABLE READ は、ファントムリードを起こさない実装になっています。<br />
InnoDB の SERIALIZABLE は、(明示していない)全ての SELECT が、SELECT ... LOCK IN SHARE MODE 扱いになる実装です。<br /></p>
<p><br />
<br /></p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h2 id="content_1_92">MySQL開発  <a class="anchor_super" id="d9999a3e" href="index.php?FAQ#d9999a3e" title="d9999a3e">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_93">aclocal 手順  <a class="anchor_super" id="wbe3b727" href="index.php?FAQ#wbe3b727" title="wbe3b727">&dagger;</a></h3>
<pre>aclocal
autoheader
libtoolize --automake --force
automake
autoconf

cd innobase
aclocal
autoheader
libtoolize --automake --force
automake
autoconf</pre>
<p>libtoolize --force を実行しないと libmysqlclient.so.14 じゃなくて libmysqlclient.14 になってしまう環境がある。</p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_94">bitkeeper で取る  <a class="anchor_super" id="c691fbe6" href="index.php?FAQ#c691fbe6" title="c691fbe6">&dagger;</a></h3>
<p>初めて取得するとき</p>
<pre>bk clone bk://mysql.bkbits.net/mysql-5.0 mysql-5.0</pre>
<p>更新するとき</p>
<pre>bk pull</pre>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_95">コンパイラー  <a class="anchor_super" id="oa771e31" href="index.php?FAQ#oa771e31" title="oa771e31">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>使用禁止<br />
gcc-2.96, egcs-1, gcc-2.8</li></ul>
<p><br />
<br /></p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h2 id="content_1_96">MySQL ドキュメント  <a class="anchor_super" id="a071918d" href="index.php?FAQ#a071918d" title="a071918d">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_97">種類  <a class="anchor_super" id="x57ad86a" href="index.php?FAQ#x57ad86a" title="x57ad86a">&dagger;</a></h3>
<div class="ie5"><table class="style_table" cellspacing="1" border="0"><tbody><tr><td class="style_td">manual.texi</td><td class="style_td">リファレンスマニュアル</td></tr><tr><td class="style_td">include.texi</td><td class="style_td">リファレンスマニュアルと internals.texi が include。定数定義</td></tr><tr><td class="style_td">reservedwords.texi</td><td class="style_td">リファレンスマニュアルが include。SQL予約語一覧</td></tr><tr><td class="style_td">is.texi</td><td class="style_td">INFORMATION_SCHEMA マニュアル</td></tr><tr><td class="style_td">internals.texi</td><td class="style_td">内部構造マニュアル</td></tr><tr><td class="style_td">manual.cluster.texi</td><td class="style_td">クラスター</td></tr></tbody></table></div>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_98">bitkeeper  <a class="anchor_super" id="kf19be60" href="index.php?FAQ#kf19be60" title="kf19be60">&dagger;</a></h3>
<p>初めて取得するとき</p>
<pre>bk clone bk://mysql.bkbits.net/mysqldoc mysqldoc</pre>
<p>更新するとき</p>
<pre>bk pull</pre>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_99">texi の加工  <a class="anchor_super" id="l406e950" href="index.php?FAQ#l406e950" title="l406e950">&dagger;</a></h3>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>texi ファイル -[texi2html]-&gt; HTML ファイル</li>
<li>texi ファイル -[texi2dvi]-&gt; dvi ファイル -[dvi2ps]-&gt; PS ファイル -[ps2pdf]-&gt; PDF ファイル</li>
<li>texi ファイル -[texi2db]-&gt; DocBook形式ファイル
<br />
<br /></li>
<li>manual.texi -&gt; HTML への変換の場合
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>manual.html ファイルができる。</li>
<li>manual.texi , include.texi , reservedwords.texi を同じディレクトリに置く。</li>
<li>texi ファイルのあるディレクトリで、
<pre>texi2html -Verbose -nomenu manual.texi</pre>
とすると、manual.html が出来る。<br />
これは 1ファイル。<br />
もし、章ごとにファイルを分割したい場合は
<pre>texi2html -nomenu -split=chapter manual.texi</pre></li></ul></li></ul>
<ul class="list2" style="padding-left:32px;margin-left:32px"><li>texi2html はバージョンによってオプションが違うので注意。</li></ul>
<p><br /></p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>manual.texi -&gt; dvi への変換の場合
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>manual.dvi ファイルが出来る</li>
<li>manual.texi と、texinfo.tex ファイル (TeX用の、スタイル定義ファイル) を同じディレクトリに置く。
<ul class="list3" style="padding-left:16px;margin-left:16px"><li>texinfo.tex ファイルは、ネット上を探す</li></ul></li>
<li>texi ファイルのあるディレクトリで、
<pre>texi2dvi manual.texi</pre>
とすると manual.dvi ができる</li></ul></li></ul>
<p><br />
<br /></p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>texi2html は perl スクリプト。日本の書き方やマルチバイトの事を考えていないので、頑張って修正しましょう。</li>
<li>texinfo.tex も日本語を考慮していないので、がんばって修正する。</li></ul>
<p><br />
<br /></p>
<hr class="full_hr" />

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h2 id="content_1_100">その他  <a class="anchor_super" id="a255c0c4" href="index.php?FAQ#a255c0c4" title="a255c0c4">&dagger;</a></h2>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_101">バグ報告、質問をする場合  <a class="anchor_super" id="b7744fed" href="index.php?FAQ#b7744fed" title="b7744fed">&dagger;</a></h3>
<p>心得の条</p>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li>以下の情報を <strong>必ず</strong> 含めよ
<ul class="list2" style="padding-left:16px;margin-left:16px"><li>mysqlbug の出力内容
<ul class="list3" style="padding-left:16px;margin-left:16px"><li>MS-Win の場合は、mysqlbug が実行できないので、mysqld --version の結果、OS のバージョンを含める</li></ul></li>
<li>my.cnf の内容</li>
<li>テーブルの構造</li>
<li>問題となるデータ, SQL 文</li>
<li>得られる結果、エラーメッセージ、.err ファイルの出力
<ul class="list3" style="padding-left:16px;margin-left:16px"><li>.err ファイルは、MS-Win の場合は、data の下の mysql.err ファイルもしくは、「コンピュータ名」.errになっていることがある</li></ul></li>
<li>なにを、どうした時に、なにが起きるか、を書く</li></ul></li></ul>
<ul class="list1" style="padding-left:16px;margin-left:16px"><li><strong>エラーメッセージをそのままコピーせよ</strong></li>
<li><strong>質問する前に、エラーメッセージを読め!</strong></li></ul>
<p>そのほか、<br />
<a href="index.php?雑学%252F心得" title="雑学/心得 (5199d)">こころえ</a><br />
を参考に。</p>
<p><br />
<br /></p>

<div class="jumpmenu"><a href="index.php?FAQ#navigator">&uarr;</a></div><h3 id="content_1_102">読み方  <a class="anchor_super" id="t6799356" href="index.php?FAQ#t6799356" title="t6799356">&dagger;</a></h3>
<div class="ie5"><table class="style_table" cellspacing="1" border="0"><tbody><tr><td class="style_td">MySQL</td><td class="style_td">まいえすきゅーえる、みーえすきゅーえる(^^;;;</td></tr><tr><td class="style_td">My</td><td class="style_td">みー (ムーミンのミー)</td></tr><tr><td class="style_td">InnoDB</td><td class="style_td">いのでーびー</td></tr><tr><td class="style_td">AB</td><td class="style_td">あーべー</td></tr><tr><td class="style_td">Oy</td><td class="style_td">おい</td></tr><tr><td class="style_td">GmbH</td><td class="style_td">げーえむべーはー</td></tr></tbody></table></div>

</div>



<hr class="full_hr" />
<!-- Toolbar -->
<div id="toolbar">
 <a href="index.php?About&#32;MyNA"><img src="image/top.png" width="20" height="20" alt="トップ" title="トップ" /></a>
 &nbsp;
 	<a href="index.php?cmd=edit&amp;page=FAQ"><img src="image/edit.png" width="20" height="20" alt="編集" title="編集" /></a>			<a href="index.php?cmd=freeze&amp;page=FAQ"><img src="image/freeze.png" width="20" height="20" alt="凍結" title="凍結" /></a>	  <a href="index.php?cmd=diff&amp;page=FAQ"><img src="image/diff.png" width="20" height="20" alt="差分" title="差分" /></a>	<a href="index.php?cmd=backup&amp;page=FAQ"><img src="image/backup.png" width="20" height="20" alt="バックアップ" title="バックアップ" /></a>			<a href="index.php?plugin=attach&amp;pcmd=upload&amp;page=FAQ"><img src="image/file.png" width="20" height="20" alt="添付" title="添付" /></a>		<a href="index.php?plugin=template&amp;refer=FAQ"><img src="image/copy.png" width="20" height="20" alt="複製" title="複製" /></a>	<a href="index.php?plugin=rename&amp;refer=FAQ"><img src="image/rename.png" width="20" height="20" alt="名前変更" title="名前変更" /></a> <a href="index.php?FAQ"><img src="image/reload.png" width="20" height="20" alt="リロード" title="リロード" /></a> &nbsp;
	<a href="index.php?plugin=newpage&amp;refer=FAQ"><img src="image/new.png" width="20" height="20" alt="新規" title="新規" /></a> <a href="index.php?cmd=list"><img src="image/list.png" width="20" height="20" alt="一覧" title="一覧" /></a> <a href="index.php?cmd=search"><img src="image/search.png" width="20" height="20" alt="単語検索" title="単語検索" /></a> <a href="index.php?RecentChanges"><img src="image/recentchanges.png" width="20" height="20" alt="最終更新" title="最終更新" /></a> &nbsp; <a href="http://www.mysql.gr.jp/frame/modules/bwiki/index.php?%A5%D8%A5%EB%A5%D7"><img src="image/help.png" width="20" height="20" alt="ヘルプ" title="ヘルプ" /></a> &nbsp; <a href="index.php?cmd=rss&amp;ver=1.0"><img src="image/rss.png" width="36" height="14" alt="最終更新のRSS" title="最終更新のRSS" /></a></div>

<div id="skin_counter" title="HTML convert time to 0.173 sec.">
 Counter: 2615,
today: 2,
yesterday: 13
 <br />
 Last-modified: Mon, 02 Apr 2007 08:25:15 JST  (4766d)</div>

<div id="related">Link: <a href="http://www.mysql.gr.jp/frame/modules/bwiki/index.php?%BB%A8%B3%D8%2F%CE%F2%BB%CB">雑学/歴史</a>(3950d)
 <a href="index.php?Contrib">Contrib</a>(4836d)
 <a href="index.php?About&#32;MySQL">About MySQL</a>(5062d)
 <a href="index.php?雑学%252F心得">雑学/心得</a>(5199d)
 <a href="index.php?About&#32;MyNA">About MyNA</a>(5325d)</div>

<div id="footer">
 Site admin: <a href="../../../index.html">webmaster</a><p />
 <strong>B-Wiki 20050210</strong> Copyright &copy; 2003-2005 <a href="http://ishii.mydns.jp/">ishii</a>. License is <a href="http://www.gnu.org/licenses/gpl.html">GPL</a>.<br /> Based on "PukiWiki" 1.4.5-2005/02/10 by <a href="http://pukiwiki.org">PukiWiki Developers Team</a>.<br />
 Powered by PHP 5.5.9-1ubuntu4.29. HTML convert time: 0.173 sec.
</div>


      </div>

        <!-- Display center blocks if any -->
                <!-- End display center blocks -->

    </td>

  </tr>
</table>

<!-- Footer -->
<p id="copyright">
&lt;<a href="mailto:webmaster@mysql.gr.jp">webmaster@mysql.gr.jp</a>&gt;<br>
Copyright 2000-2005 &copy; <a href="../../../index.html" target="_TOP">MyNA</a>. All Rights Reserved. Feel free to link. 
</body>
</html>